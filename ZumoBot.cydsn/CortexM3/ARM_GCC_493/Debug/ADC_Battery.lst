ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_Battery.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_Battery_CalcGain,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	ADC_Battery_CalcGain, %function
  23              	ADC_Battery_CalcGain:
  24              	.LFB12:
  25              		.file 1 "Generated_Source\\PSoC5\\ADC_Battery.c"
   1:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_Battery.c **** * File Name: ADC_Battery.c
   3:Generated_Source\PSoC5/ADC_Battery.c **** * Version 3.0
   4:Generated_Source\PSoC5/ADC_Battery.c **** *
   5:Generated_Source\PSoC5/ADC_Battery.c **** * Description:
   6:Generated_Source\PSoC5/ADC_Battery.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/ADC_Battery.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/ADC_Battery.c **** *
   9:Generated_Source\PSoC5/ADC_Battery.c **** * Note:
  10:Generated_Source\PSoC5/ADC_Battery.c **** *
  11:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_Battery.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_Battery.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_Battery.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_Battery.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_Battery.c **** 
  18:Generated_Source\PSoC5/ADC_Battery.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/ADC_Battery.c **** #include "ADC_Battery.h"
  20:Generated_Source\PSoC5/ADC_Battery.c **** 
  21:Generated_Source\PSoC5/ADC_Battery.c **** #if(ADC_Battery_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/ADC_Battery.c ****     #include "ADC_Battery_theACLK.h"
  23:Generated_Source\PSoC5/ADC_Battery.c **** #endif /* End ADC_Battery_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/ADC_Battery.c **** 
  25:Generated_Source\PSoC5/ADC_Battery.c **** 
  26:Generated_Source\PSoC5/ADC_Battery.c **** /***************************************
  27:Generated_Source\PSoC5/ADC_Battery.c **** * Forward function references
  28:Generated_Source\PSoC5/ADC_Battery.c **** ***************************************/
  29:Generated_Source\PSoC5/ADC_Battery.c **** static void ADC_Battery_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/ADC_Battery.c **** 
  31:Generated_Source\PSoC5/ADC_Battery.c **** 
  32:Generated_Source\PSoC5/ADC_Battery.c **** /***************************************
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 2


  33:Generated_Source\PSoC5/ADC_Battery.c **** * Global data allocation
  34:Generated_Source\PSoC5/ADC_Battery.c **** ***************************************/
  35:Generated_Source\PSoC5/ADC_Battery.c **** uint8 ADC_Battery_initVar = 0u;
  36:Generated_Source\PSoC5/ADC_Battery.c **** volatile int16 ADC_Battery_offset;
  37:Generated_Source\PSoC5/ADC_Battery.c **** volatile int16 ADC_Battery_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/ADC_Battery.c **** volatile int32 ADC_Battery_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/ADC_Battery.c **** volatile int16 ADC_Battery_shift;
  40:Generated_Source\PSoC5/ADC_Battery.c **** 
  41:Generated_Source\PSoC5/ADC_Battery.c **** 
  42:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_Start
  44:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
  45:Generated_Source\PSoC5/ADC_Battery.c **** *
  46:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
  47:Generated_Source\PSoC5/ADC_Battery.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_Init() function, and then calls the
  50:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_Enable() function.
  51:Generated_Source\PSoC5/ADC_Battery.c **** *
  52:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
  53:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
  54:Generated_Source\PSoC5/ADC_Battery.c **** *
  55:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
  56:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
  57:Generated_Source\PSoC5/ADC_Battery.c **** *
  58:Generated_Source\PSoC5/ADC_Battery.c **** * Global variables:
  59:Generated_Source\PSoC5/ADC_Battery.c **** *  The ADC_Battery_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/ADC_Battery.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/ADC_Battery.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/ADC_Battery.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_Start() routine.
  64:Generated_Source\PSoC5/ADC_Battery.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/ADC_Battery.c **** *  to zero before call of ADC_Battery_Start() routine, or the user may call
  66:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_Init() and ADC_Battery_Enable() as done in the
  67:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_Start() routine.
  68:Generated_Source\PSoC5/ADC_Battery.c **** *
  69:Generated_Source\PSoC5/ADC_Battery.c **** * Side Effect:
  70:Generated_Source\PSoC5/ADC_Battery.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_Enable() function.
  72:Generated_Source\PSoC5/ADC_Battery.c **** *
  73:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ADC_Battery.c **** void ADC_Battery_Start(void)
  75:Generated_Source\PSoC5/ADC_Battery.c **** {
  76:Generated_Source\PSoC5/ADC_Battery.c **** 
  77:Generated_Source\PSoC5/ADC_Battery.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/ADC_Battery.c ****     if(ADC_Battery_initVar == 0u)
  79:Generated_Source\PSoC5/ADC_Battery.c ****     {
  80:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_Init();
  81:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_initVar = 1u;
  82:Generated_Source\PSoC5/ADC_Battery.c ****     }
  83:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_Enable();
  84:Generated_Source\PSoC5/ADC_Battery.c **** }
  85:Generated_Source\PSoC5/ADC_Battery.c **** 
  86:Generated_Source\PSoC5/ADC_Battery.c **** 
  87:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_Init
  89:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 3


  90:Generated_Source\PSoC5/ADC_Battery.c **** *
  91:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
  92:Generated_Source\PSoC5/ADC_Battery.c **** *  Initialize component's parameters to the parameters set by user in the
  93:Generated_Source\PSoC5/ADC_Battery.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_Start().
  95:Generated_Source\PSoC5/ADC_Battery.c **** *
  96:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
  97:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
  98:Generated_Source\PSoC5/ADC_Battery.c **** *
  99:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 100:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 101:Generated_Source\PSoC5/ADC_Battery.c **** *
 102:Generated_Source\PSoC5/ADC_Battery.c **** * Global variables:
 103:Generated_Source\PSoC5/ADC_Battery.c **** *  The ADC_Battery_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/ADC_Battery.c **** *
 105:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/ADC_Battery.c **** void ADC_Battery_Init(void)
 107:Generated_Source\PSoC5/ADC_Battery.c **** {
 108:Generated_Source\PSoC5/ADC_Battery.c **** 
 109:Generated_Source\PSoC5/ADC_Battery.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/ADC_Battery.c ****     #if(ADC_Battery_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* End ADC_Battery_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/ADC_Battery.c **** 
 114:Generated_Source\PSoC5/ADC_Battery.c ****     #if(ADC_Battery_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/ADC_Battery.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/ADC_Battery.c ****         CyIntSetPriority(ADC_Battery_INTC_NUMBER, ADC_Battery_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/ADC_Battery.c ****         (void)CyIntSetVector(ADC_Battery_INTC_NUMBER, &ADC_Battery_ISR);
 118:Generated_Source\PSoC5/ADC_Battery.c ****     #endif   /* End ADC_Battery_IRQ_REMOVE */
 119:Generated_Source\PSoC5/ADC_Battery.c **** 
 120:Generated_Source\PSoC5/ADC_Battery.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_SAR_CSR1_REG |= ADC_Battery_SAR_IRQ_MASK_EN | ADC_Battery_SAR_IRQ_MODE_EDGE;
 122:Generated_Source\PSoC5/ADC_Battery.c **** 
 123:Generated_Source\PSoC5/ADC_Battery.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_SetResolution(ADC_Battery_DEFAULT_RESOLUTION);
 125:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_offset = 0;
 126:Generated_Source\PSoC5/ADC_Battery.c **** }
 127:Generated_Source\PSoC5/ADC_Battery.c **** 
 128:Generated_Source\PSoC5/ADC_Battery.c **** 
 129:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_Enable
 131:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 132:Generated_Source\PSoC5/ADC_Battery.c **** *
 133:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 134:Generated_Source\PSoC5/ADC_Battery.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/ADC_Battery.c **** *
 136:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 137:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 138:Generated_Source\PSoC5/ADC_Battery.c **** *
 139:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 140:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 141:Generated_Source\PSoC5/ADC_Battery.c **** *
 142:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/ADC_Battery.c **** void ADC_Battery_Enable(void)
 144:Generated_Source\PSoC5/ADC_Battery.c **** {
 145:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 tmpReg;
 146:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 4


 147:Generated_Source\PSoC5/ADC_Battery.c ****     enableInterrupts = CyEnterCriticalSection();
 148:Generated_Source\PSoC5/ADC_Battery.c **** 
 149:Generated_Source\PSoC5/ADC_Battery.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_PWRMGR_SAR_REG |= ADC_Battery_ACT_PWR_SAR_EN;
 151:Generated_Source\PSoC5/ADC_Battery.c **** 
 152:Generated_Source\PSoC5/ADC_Battery.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_STBY_PWRMGR_SAR_REG |= ADC_Battery_STBY_PWR_SAR_EN;
 154:Generated_Source\PSoC5/ADC_Battery.c **** 
 155:Generated_Source\PSoC5/ADC_Battery.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/ADC_Battery.c ****     #if(ADC_Battery_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_PWRMGR_CLK_REG |= ADC_Battery_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_STBY_PWRMGR_CLK_REG |= ADC_Battery_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* End ADC_Battery_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/ADC_Battery.c **** 
 161:Generated_Source\PSoC5/ADC_Battery.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/ADC_Battery.c ****     tmpReg = ADC_Battery_SAR_CSR3_REG;
 163:Generated_Source\PSoC5/ADC_Battery.c ****     tmpReg |= ADC_Battery_SAR_EN_BUF_VCM_EN;
 164:Generated_Source\PSoC5/ADC_Battery.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/ADC_Battery.c ****     #if((ADC_Battery_DEFAULT_REFERENCE == ADC_Battery__EXT_REF) || \
 166:Generated_Source\PSoC5/ADC_Battery.c ****         (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/ADC_Battery.c ****         tmpReg &= (uint8)~ADC_Battery_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/ADC_Battery.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/ADC_Battery.c ****         tmpReg |= ADC_Battery_SAR_EN_BUF_VREF_EN;
 170:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* ADC_Battery_DEFAULT_REFERENCE == ADC_Battery__EXT_REF */
 171:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_SAR_CSR3_REG = tmpReg;
 172:Generated_Source\PSoC5/ADC_Battery.c **** 
 173:Generated_Source\PSoC5/ADC_Battery.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/ADC_Battery.c ****     #if(ADC_Battery_DEFAULT_RANGE == ADC_Battery__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/ADC_Battery.c ****         #if(ADC_Battery_DEFAULT_REFERENCE == ADC_Battery__EXT_REF)
 176:Generated_Source\PSoC5/ADC_Battery.c ****             ADC_Battery_SAR_CSR6_REG = ADC_Battery_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/ADC_Battery.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/ADC_Battery.c ****             ADC_Battery_SAR_CSR6_REG = ADC_Battery_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/ADC_Battery.c ****         #endif /* ADC_Battery_DEFAULT_REFERENCE == ADC_Battery__EXT_REF */
 180:Generated_Source\PSoC5/ADC_Battery.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/ADC_Battery.c ****         #if(ADC_Battery_DEFAULT_REFERENCE == ADC_Battery__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/ADC_Battery.c ****             ADC_Battery_SAR_CSR6_REG = ADC_Battery_INT_VREF;            /* S3 + S4 */
 183:Generated_Source\PSoC5/ADC_Battery.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/ADC_Battery.c ****             ADC_Battery_SAR_CSR6_REG = ADC_Battery_INT_BYPASS_EXT_VREF; /* S2 */
 185:Generated_Source\PSoC5/ADC_Battery.c ****         #endif /* ADC_Battery_DEFAULT_REFERENCE == ADC_Battery__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/ADC_Battery.c **** 
 188:Generated_Source\PSoC5/ADC_Battery.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/ADC_Battery.c ****     #if(ADC_Battery_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_SAR_CSR5_REG &= (uint8)~ADC_Battery_SAR_DLY_INC;
 191:Generated_Source\PSoC5/ADC_Battery.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_SAR_CSR5_REG |= ADC_Battery_SAR_DLY_INC;
 193:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* ADC_Battery_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/ADC_Battery.c **** 
 195:Generated_Source\PSoC5/ADC_Battery.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/ADC_Battery.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/ADC_Battery.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/ADC_Battery.c ****     */
 199:Generated_Source\PSoC5/ADC_Battery.c ****     #if(ADC_Battery_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_SAR_CSR5_REG |= ADC_Battery_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/ADC_Battery.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_SAR_CSR5_REG &= (uint8)~ADC_Battery_SAR_SEL_CSEL_DFT_CHAR;
 203:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* ADC_Battery_HIGH_POWER_PULSE == 0u */
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 5


 204:Generated_Source\PSoC5/ADC_Battery.c **** 
 205:Generated_Source\PSoC5/ADC_Battery.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_SAR_CSR0_REG = (uint8)((uint8)ADC_Battery_DEFAULT_POWER << ADC_Battery_SAR_POWER_SH
 207:Generated_Source\PSoC5/ADC_Battery.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/ADC_Battery.c ****     #if ((CY_PSOC5LP) || (ADC_Battery_DEFAULT_REFERENCE != ADC_Battery__EXT_REF))
 209:Generated_Source\PSoC5/ADC_Battery.c ****         | ADC_Battery_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/ADC_Battery.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/ADC_Battery.c ****     #if(ADC_Battery_DEFAULT_CONV_MODE != ADC_Battery__FREE_RUNNING)      /* If triggered mode */
 213:Generated_Source\PSoC5/ADC_Battery.c ****         | ADC_Battery_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/ADC_Battery.c ****         | ADC_Battery_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* ADC_Battery_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/ADC_Battery.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/ADC_Battery.c **** 
 218:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_SAR_TR0_REG = ADC_Battery_SAR_CAP_TRIM_2;
 219:Generated_Source\PSoC5/ADC_Battery.c **** 
 220:Generated_Source\PSoC5/ADC_Battery.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_SAR_CLK_REG |= ADC_Battery_SAR_MX_CLK_EN;
 222:Generated_Source\PSoC5/ADC_Battery.c **** 
 223:Generated_Source\PSoC5/ADC_Battery.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 224:Generated_Source\PSoC5/ADC_Battery.c **** 
 225:Generated_Source\PSoC5/ADC_Battery.c ****     #if(ADC_Battery_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/ADC_Battery.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/ADC_Battery.c ****         CyIntClearPending(ADC_Battery_INTC_NUMBER);
 228:Generated_Source\PSoC5/ADC_Battery.c ****     #endif   /* End ADC_Battery_IRQ_REMOVE */
 229:Generated_Source\PSoC5/ADC_Battery.c **** 
 230:Generated_Source\PSoC5/ADC_Battery.c ****     CyExitCriticalSection(enableInterrupts);
 231:Generated_Source\PSoC5/ADC_Battery.c **** }
 232:Generated_Source\PSoC5/ADC_Battery.c **** 
 233:Generated_Source\PSoC5/ADC_Battery.c **** 
 234:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_Stop
 236:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ADC_Battery.c **** *
 238:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 239:Generated_Source\PSoC5/ADC_Battery.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/ADC_Battery.c **** *
 241:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 242:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 243:Generated_Source\PSoC5/ADC_Battery.c **** *
 244:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 245:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 246:Generated_Source\PSoC5/ADC_Battery.c **** *
 247:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/ADC_Battery.c **** void ADC_Battery_Stop(void)
 249:Generated_Source\PSoC5/ADC_Battery.c **** {
 250:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/ADC_Battery.c ****     enableInterrupts = CyEnterCriticalSection();
 252:Generated_Source\PSoC5/ADC_Battery.c **** 
 253:Generated_Source\PSoC5/ADC_Battery.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_SAR_CSR0_REG &= (uint8)~ADC_Battery_SAR_SOF_START_CONV;
 255:Generated_Source\PSoC5/ADC_Battery.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_PWRMGR_SAR_REG &= (uint8)~ADC_Battery_ACT_PWR_SAR_EN;
 257:Generated_Source\PSoC5/ADC_Battery.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_Battery_STBY_PWR_SAR_EN;
 259:Generated_Source\PSoC5/ADC_Battery.c **** 
 260:Generated_Source\PSoC5/ADC_Battery.c ****     /* This is only valid if there is an internal clock */
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 6


 261:Generated_Source\PSoC5/ADC_Battery.c ****     #if(ADC_Battery_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_PWRMGR_CLK_REG &= (uint8)~ADC_Battery_ACT_PWR_CLK_EN;
 263:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_Battery_STBY_PWR_CLK_EN;
 264:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* End ADC_Battery_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/ADC_Battery.c **** 
 266:Generated_Source\PSoC5/ADC_Battery.c ****     CyExitCriticalSection(enableInterrupts);
 267:Generated_Source\PSoC5/ADC_Battery.c **** 
 268:Generated_Source\PSoC5/ADC_Battery.c **** }
 269:Generated_Source\PSoC5/ADC_Battery.c **** 
 270:Generated_Source\PSoC5/ADC_Battery.c **** 
 271:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_SetPower
 273:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 274:Generated_Source\PSoC5/ADC_Battery.c **** *
 275:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 276:Generated_Source\PSoC5/ADC_Battery.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/ADC_Battery.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/ADC_Battery.c **** *
 279:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 280:Generated_Source\PSoC5/ADC_Battery.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/ADC_Battery.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/ADC_Battery.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/ADC_Battery.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/ADC_Battery.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/ADC_Battery.c **** *
 286:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 287:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 288:Generated_Source\PSoC5/ADC_Battery.c **** *
 289:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/ADC_Battery.c **** void ADC_Battery_SetPower(uint8 power)
 291:Generated_Source\PSoC5/ADC_Battery.c **** {
 292:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/ADC_Battery.c **** 
 294:Generated_Source\PSoC5/ADC_Battery.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/ADC_Battery.c ****     power &= ADC_Battery_SAR_API_POWER_MASK;
 296:Generated_Source\PSoC5/ADC_Battery.c **** 
 297:Generated_Source\PSoC5/ADC_Battery.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/ADC_Battery.c ****     tmpReg = ADC_Battery_SAR_CSR0_REG & (uint8)~ADC_Battery_SAR_POWER_MASK;
 299:Generated_Source\PSoC5/ADC_Battery.c ****     tmpReg |= (uint8)(power << ADC_Battery_SAR_POWER_SHIFT);
 300:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_SAR_CSR0_REG = tmpReg;
 301:Generated_Source\PSoC5/ADC_Battery.c **** }
 302:Generated_Source\PSoC5/ADC_Battery.c **** 
 303:Generated_Source\PSoC5/ADC_Battery.c **** 
 304:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_SetResolution
 306:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ADC_Battery.c **** *
 308:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 309:Generated_Source\PSoC5/ADC_Battery.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/ADC_Battery.c **** *
 311:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 312:Generated_Source\PSoC5/ADC_Battery.c **** *  resolution:
 313:Generated_Source\PSoC5/ADC_Battery.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/ADC_Battery.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/ADC_Battery.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/ADC_Battery.c **** *
 317:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 7


 318:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 319:Generated_Source\PSoC5/ADC_Battery.c **** *
 320:Generated_Source\PSoC5/ADC_Battery.c **** * Side Effects:
 321:Generated_Source\PSoC5/ADC_Battery.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/ADC_Battery.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/ADC_Battery.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/ADC_Battery.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/ADC_Battery.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/ADC_Battery.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/ADC_Battery.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/ADC_Battery.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/ADC_Battery.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/ADC_Battery.c **** *  clock cycles.
 332:Generated_Source\PSoC5/ADC_Battery.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/ADC_Battery.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/ADC_Battery.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/ADC_Battery.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/ADC_Battery.c **** *
 339:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/ADC_Battery.c **** void ADC_Battery_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/ADC_Battery.c **** {
 342:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/ADC_Battery.c **** 
 344:Generated_Source\PSoC5/ADC_Battery.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/ADC_Battery.c ****     switch (resolution)
 346:Generated_Source\PSoC5/ADC_Battery.c ****     {
 347:Generated_Source\PSoC5/ADC_Battery.c ****         case (uint8)ADC_Battery__BITS_12:
 348:Generated_Source\PSoC5/ADC_Battery.c ****             tmpReg = ADC_Battery_SAR_RESOLUTION_12BIT | ADC_Battery_SAR_SAMPLE_WIDTH;
 349:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 350:Generated_Source\PSoC5/ADC_Battery.c ****         case (uint8)ADC_Battery__BITS_10:
 351:Generated_Source\PSoC5/ADC_Battery.c ****             tmpReg = ADC_Battery_SAR_RESOLUTION_10BIT | ADC_Battery_SAR_SAMPLE_WIDTH;
 352:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 353:Generated_Source\PSoC5/ADC_Battery.c ****         case (uint8)ADC_Battery__BITS_8:
 354:Generated_Source\PSoC5/ADC_Battery.c ****             tmpReg = ADC_Battery_SAR_RESOLUTION_8BIT | ADC_Battery_SAR_SAMPLE_WIDTH;
 355:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 356:Generated_Source\PSoC5/ADC_Battery.c ****         default:
 357:Generated_Source\PSoC5/ADC_Battery.c ****             tmpReg = ADC_Battery_SAR_RESOLUTION_12BIT | ADC_Battery_SAR_SAMPLE_WIDTH;
 358:Generated_Source\PSoC5/ADC_Battery.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/ADC_Battery.c ****             CYASSERT(0u != 0u);
 360:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 361:Generated_Source\PSoC5/ADC_Battery.c ****     }
 362:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_SAR_CSR2_REG = tmpReg;
 363:Generated_Source\PSoC5/ADC_Battery.c **** 
 364:Generated_Source\PSoC5/ADC_Battery.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_CalcGain(resolution);
 366:Generated_Source\PSoC5/ADC_Battery.c **** }
 367:Generated_Source\PSoC5/ADC_Battery.c **** 
 368:Generated_Source\PSoC5/ADC_Battery.c **** 
 369:Generated_Source\PSoC5/ADC_Battery.c **** #if(ADC_Battery_DEFAULT_CONV_MODE != ADC_Battery__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/ADC_Battery.c **** 
 371:Generated_Source\PSoC5/ADC_Battery.c **** 
 372:Generated_Source\PSoC5/ADC_Battery.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/ADC_Battery.c ****     * Function Name: ADC_Battery_StartConvert
 374:Generated_Source\PSoC5/ADC_Battery.c ****     ********************************************************************************
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 8


 375:Generated_Source\PSoC5/ADC_Battery.c ****     *
 376:Generated_Source\PSoC5/ADC_Battery.c ****     * Summary:
 377:Generated_Source\PSoC5/ADC_Battery.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/ADC_Battery.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/ADC_Battery.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/ADC_Battery.c ****     *  ADC_Battery_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/ADC_Battery.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/ADC_Battery.c ****     *
 383:Generated_Source\PSoC5/ADC_Battery.c ****     * Parameters:
 384:Generated_Source\PSoC5/ADC_Battery.c ****     *  None.
 385:Generated_Source\PSoC5/ADC_Battery.c ****     *
 386:Generated_Source\PSoC5/ADC_Battery.c ****     * Return:
 387:Generated_Source\PSoC5/ADC_Battery.c ****     *  None.
 388:Generated_Source\PSoC5/ADC_Battery.c ****     *
 389:Generated_Source\PSoC5/ADC_Battery.c ****     * Theory:
 390:Generated_Source\PSoC5/ADC_Battery.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/ADC_Battery.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/ADC_Battery.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/ADC_Battery.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/ADC_Battery.c ****     *
 395:Generated_Source\PSoC5/ADC_Battery.c ****     * Side Effects:
 396:Generated_Source\PSoC5/ADC_Battery.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/ADC_Battery.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/ADC_Battery.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/ADC_Battery.c ****     *
 400:Generated_Source\PSoC5/ADC_Battery.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/ADC_Battery.c ****     void ADC_Battery_StartConvert(void)
 402:Generated_Source\PSoC5/ADC_Battery.c ****     {
 403:Generated_Source\PSoC5/ADC_Battery.c ****         #if(ADC_Battery_DEFAULT_CONV_MODE != ADC_Battery__FREE_RUNNING)  /* If software triggered m
 404:Generated_Source\PSoC5/ADC_Battery.c ****             ADC_Battery_SAR_CSR0_REG &= (uint8)~ADC_Battery_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:Generated_Source\PSoC5/ADC_Battery.c ****         #endif /* End ADC_Battery_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/ADC_Battery.c **** 
 407:Generated_Source\PSoC5/ADC_Battery.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_SAR_CSR0_REG |= ADC_Battery_SAR_SOF_START_CONV;
 409:Generated_Source\PSoC5/ADC_Battery.c ****     }
 410:Generated_Source\PSoC5/ADC_Battery.c **** 
 411:Generated_Source\PSoC5/ADC_Battery.c **** 
 412:Generated_Source\PSoC5/ADC_Battery.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/ADC_Battery.c ****     * Function Name: ADC_Battery_StopConvert
 414:Generated_Source\PSoC5/ADC_Battery.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/ADC_Battery.c ****     *
 416:Generated_Source\PSoC5/ADC_Battery.c ****     * Summary:
 417:Generated_Source\PSoC5/ADC_Battery.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/ADC_Battery.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/ADC_Battery.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/ADC_Battery.c ****     *
 421:Generated_Source\PSoC5/ADC_Battery.c ****     * Parameters:
 422:Generated_Source\PSoC5/ADC_Battery.c ****     *  None.
 423:Generated_Source\PSoC5/ADC_Battery.c ****     *
 424:Generated_Source\PSoC5/ADC_Battery.c ****     * Return:
 425:Generated_Source\PSoC5/ADC_Battery.c ****     *  None.
 426:Generated_Source\PSoC5/ADC_Battery.c ****     *
 427:Generated_Source\PSoC5/ADC_Battery.c ****     * Theory:
 428:Generated_Source\PSoC5/ADC_Battery.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/ADC_Battery.c ****     *
 430:Generated_Source\PSoC5/ADC_Battery.c ****     * Side Effects:
 431:Generated_Source\PSoC5/ADC_Battery.c ****     *  In Software Trigger sample mode, this function sets a software version of the
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 9


 432:Generated_Source\PSoC5/ADC_Battery.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/ADC_Battery.c ****     *
 434:Generated_Source\PSoC5/ADC_Battery.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/ADC_Battery.c ****     void ADC_Battery_StopConvert(void)
 436:Generated_Source\PSoC5/ADC_Battery.c ****     {
 437:Generated_Source\PSoC5/ADC_Battery.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_SAR_CSR0_REG &= (uint8)~ADC_Battery_SAR_SOF_START_CONV;
 439:Generated_Source\PSoC5/ADC_Battery.c **** 
 440:Generated_Source\PSoC5/ADC_Battery.c ****         #if(ADC_Battery_DEFAULT_CONV_MODE != ADC_Battery__FREE_RUNNING)  /* If software triggered m
 441:Generated_Source\PSoC5/ADC_Battery.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/ADC_Battery.c ****             ADC_Battery_SAR_CSR0_REG |= ADC_Battery_SAR_MX_SOF_UDB;    /* source: UDB */
 443:Generated_Source\PSoC5/ADC_Battery.c ****         #endif /* End ADC_Battery_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/ADC_Battery.c **** 
 445:Generated_Source\PSoC5/ADC_Battery.c ****     }
 446:Generated_Source\PSoC5/ADC_Battery.c **** 
 447:Generated_Source\PSoC5/ADC_Battery.c **** #endif /* End ADC_Battery_DEFAULT_CONV_MODE != ADC_Battery__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/ADC_Battery.c **** 
 449:Generated_Source\PSoC5/ADC_Battery.c **** 
 450:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_IsEndConversion
 452:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_Battery.c **** *
 454:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_Battery.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/ADC_Battery.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/ADC_Battery.c **** *  parameter.
 458:Generated_Source\PSoC5/ADC_Battery.c **** *
 459:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_Battery.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/ADC_Battery.c **** *   ADC_Battery_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/ADC_Battery.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/ADC_Battery.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/ADC_Battery.c **** *   ADC_Battery_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/ADC_Battery.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/ADC_Battery.c **** *
 467:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 468:Generated_Source\PSoC5/ADC_Battery.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/ADC_Battery.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/ADC_Battery.c **** *
 471:Generated_Source\PSoC5/ADC_Battery.c **** * Side Effects:
 472:Generated_Source\PSoC5/ADC_Battery.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/ADC_Battery.c **** *
 474:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/ADC_Battery.c **** uint8 ADC_Battery_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/ADC_Battery.c **** {
 477:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 status;
 478:Generated_Source\PSoC5/ADC_Battery.c **** 
 479:Generated_Source\PSoC5/ADC_Battery.c ****     do
 480:Generated_Source\PSoC5/ADC_Battery.c ****     {
 481:Generated_Source\PSoC5/ADC_Battery.c ****         status = ADC_Battery_SAR_CSR1_REG & ADC_Battery_SAR_EOF_1;
 482:Generated_Source\PSoC5/ADC_Battery.c ****     } while ((status != ADC_Battery_SAR_EOF_1) && (retMode == ADC_Battery_WAIT_FOR_RESULT));
 483:Generated_Source\PSoC5/ADC_Battery.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/ADC_Battery.c ****     if(status == ADC_Battery_SAR_EOF_1)
 485:Generated_Source\PSoC5/ADC_Battery.c ****     {
 486:Generated_Source\PSoC5/ADC_Battery.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/ADC_Battery.c ****         CyDelayUs(1u);
 488:Generated_Source\PSoC5/ADC_Battery.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 10


 489:Generated_Source\PSoC5/ADC_Battery.c ****         CY_GET_REG8(ADC_Battery_SAR_CSR1_PTR);
 490:Generated_Source\PSoC5/ADC_Battery.c ****     }
 491:Generated_Source\PSoC5/ADC_Battery.c **** 
 492:Generated_Source\PSoC5/ADC_Battery.c ****     return(status);
 493:Generated_Source\PSoC5/ADC_Battery.c **** }
 494:Generated_Source\PSoC5/ADC_Battery.c **** 
 495:Generated_Source\PSoC5/ADC_Battery.c **** 
 496:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_GetResult8
 498:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 499:Generated_Source\PSoC5/ADC_Battery.c **** *
 500:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 501:Generated_Source\PSoC5/ADC_Battery.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/ADC_Battery.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/ADC_Battery.c **** *   sample is ready.
 505:Generated_Source\PSoC5/ADC_Battery.c **** *
 506:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 508:Generated_Source\PSoC5/ADC_Battery.c **** *
 509:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 510:Generated_Source\PSoC5/ADC_Battery.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/ADC_Battery.c **** *
 512:Generated_Source\PSoC5/ADC_Battery.c **** * Global Variables:
 513:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/ADC_Battery.c **** *  compliment form.
 515:Generated_Source\PSoC5/ADC_Battery.c **** *
 516:Generated_Source\PSoC5/ADC_Battery.c **** * Side Effects:
 517:Generated_Source\PSoC5/ADC_Battery.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/ADC_Battery.c **** *
 519:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/ADC_Battery.c **** int8 ADC_Battery_GetResult8( void )
 521:Generated_Source\PSoC5/ADC_Battery.c **** {
 522:Generated_Source\PSoC5/ADC_Battery.c ****     return( (int8)ADC_Battery_SAR_WRK0_REG - (int8)ADC_Battery_shift);
 523:Generated_Source\PSoC5/ADC_Battery.c **** }
 524:Generated_Source\PSoC5/ADC_Battery.c **** 
 525:Generated_Source\PSoC5/ADC_Battery.c **** 
 526:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_GetResult16
 528:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 529:Generated_Source\PSoC5/ADC_Battery.c **** *
 530:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 531:Generated_Source\PSoC5/ADC_Battery.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/ADC_Battery.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/ADC_Battery.c **** *   sample is ready
 535:Generated_Source\PSoC5/ADC_Battery.c **** *
 536:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 537:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 538:Generated_Source\PSoC5/ADC_Battery.c **** *
 539:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 540:Generated_Source\PSoC5/ADC_Battery.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/ADC_Battery.c **** *
 542:Generated_Source\PSoC5/ADC_Battery.c **** * Global Variables:
 543:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/ADC_Battery.c **** *  compliment form.
 545:Generated_Source\PSoC5/ADC_Battery.c **** *
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 11


 546:Generated_Source\PSoC5/ADC_Battery.c **** * Side Effects:
 547:Generated_Source\PSoC5/ADC_Battery.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/ADC_Battery.c **** *
 549:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/ADC_Battery.c **** int16 ADC_Battery_GetResult16( void )
 551:Generated_Source\PSoC5/ADC_Battery.c **** {
 552:Generated_Source\PSoC5/ADC_Battery.c ****     uint16 res;
 553:Generated_Source\PSoC5/ADC_Battery.c **** 
 554:Generated_Source\PSoC5/ADC_Battery.c ****     res = CY_GET_REG16(ADC_Battery_SAR_WRK_PTR);
 555:Generated_Source\PSoC5/ADC_Battery.c **** 
 556:Generated_Source\PSoC5/ADC_Battery.c ****     return( (int16)res - ADC_Battery_shift );
 557:Generated_Source\PSoC5/ADC_Battery.c **** }
 558:Generated_Source\PSoC5/ADC_Battery.c **** 
 559:Generated_Source\PSoC5/ADC_Battery.c **** 
 560:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_SetOffset
 562:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 563:Generated_Source\PSoC5/ADC_Battery.c **** *
 564:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 565:Generated_Source\PSoC5/ADC_Battery.c **** *  Sets the ADC offset, which is used by ADC_Battery_CountsTo_Volts(),
 566:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_CountsTo_mVolts(), and ADC_Battery_CountsTo_uVolts()
 567:Generated_Source\PSoC5/ADC_Battery.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/ADC_Battery.c **** *  conversion.
 569:Generated_Source\PSoC5/ADC_Battery.c **** *
 570:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 571:Generated_Source\PSoC5/ADC_Battery.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/ADC_Battery.c ****    the same input voltage.
 573:Generated_Source\PSoC5/ADC_Battery.c **** *
 574:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 575:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 576:Generated_Source\PSoC5/ADC_Battery.c **** *
 577:Generated_Source\PSoC5/ADC_Battery.c **** * Global Variables:
 578:Generated_Source\PSoC5/ADC_Battery.c **** *  The ADC_Battery_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/ADC_Battery.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/ADC_Battery.c **** *  Affects the ADC_Battery_CountsTo_Volts,
 581:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_CountsTo_mVolts, ADC_Battery_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/ADC_Battery.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/ADC_Battery.c **** *
 584:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/ADC_Battery.c **** void ADC_Battery_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/ADC_Battery.c **** {
 587:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_offset = offset;
 588:Generated_Source\PSoC5/ADC_Battery.c **** }
 589:Generated_Source\PSoC5/ADC_Battery.c **** 
 590:Generated_Source\PSoC5/ADC_Battery.c **** 
 591:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_CalcGain
 593:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 594:Generated_Source\PSoC5/ADC_Battery.c **** *
 595:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 596:Generated_Source\PSoC5/ADC_Battery.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/ADC_Battery.c **** *
 598:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 599:Generated_Source\PSoC5/ADC_Battery.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/ADC_Battery.c **** *
 601:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 602:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 12


 603:Generated_Source\PSoC5/ADC_Battery.c **** *
 604:Generated_Source\PSoC5/ADC_Battery.c **** * Global Variables:
 605:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/ADC_Battery.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/ADC_Battery.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/ADC_Battery.c **** *
 610:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/ADC_Battery.c **** static void ADC_Battery_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/ADC_Battery.c **** {
  26              		.loc 1 612 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 613:Generated_Source\PSoC5/ADC_Battery.c ****     int32 counts;
 614:Generated_Source\PSoC5/ADC_Battery.c ****     #if(!((ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/ADC_Battery.c ****          (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/ADC_Battery.c ****          (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/ADC_Battery.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* End ADC_Battery_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/ADC_Battery.c **** 
 620:Generated_Source\PSoC5/ADC_Battery.c ****     switch (resolution)
  35              		.loc 1 620 0
  36 0002 0A28     		cmp	r0, #10
  37 0004 0FD0     		beq	.L6
  38 0006 0C28     		cmp	r0, #12
  39 0008 02D0     		beq	.L4
  40 000a 0828     		cmp	r0, #8
  41 000c 06D1     		bne	.L7
  42 000e 02E0     		b	.L5
  43              	.L4:
 621:Generated_Source\PSoC5/ADC_Battery.c ****     {
 622:Generated_Source\PSoC5/ADC_Battery.c ****         case (uint8)ADC_Battery__BITS_12:
 623:Generated_Source\PSoC5/ADC_Battery.c ****             counts = (int32)ADC_Battery_SAR_WRK_MAX_12BIT;
  44              		.loc 1 623 0
  45 0010 4FF48052 		mov	r2, #4096
  46 0014 09E0     		b	.L3
  47              	.L5:
  48              	.LVL1:
 624:Generated_Source\PSoC5/ADC_Battery.c ****             #if(!((ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/ADC_Battery.c ****                  (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/ADC_Battery.c ****                  (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/ADC_Battery.c ****                 diff_zero = ADC_Battery_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/ADC_Battery.c ****             #endif /* End ADC_Battery_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 630:Generated_Source\PSoC5/ADC_Battery.c ****         case (uint8)ADC_Battery__BITS_10:
 631:Generated_Source\PSoC5/ADC_Battery.c ****             counts = (int32)ADC_Battery_SAR_WRK_MAX_10BIT;
 632:Generated_Source\PSoC5/ADC_Battery.c ****             #if(!((ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/ADC_Battery.c ****                  (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/ADC_Battery.c ****                  (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/ADC_Battery.c ****                 diff_zero = ADC_Battery_SAR_DIFF_SHIFT >> 2u;
 636:Generated_Source\PSoC5/ADC_Battery.c ****             #endif /* End ADC_Battery_DEFAULT_RANGE */
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 13


 637:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 638:Generated_Source\PSoC5/ADC_Battery.c ****         case (uint8)ADC_Battery__BITS_8:
 639:Generated_Source\PSoC5/ADC_Battery.c ****             counts = (int32)ADC_Battery_SAR_WRK_MAX_8BIT;
  49              		.loc 1 639 0
  50 0016 4FF48072 		mov	r2, #256
 640:Generated_Source\PSoC5/ADC_Battery.c ****             #if(!((ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/ADC_Battery.c ****                  (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/ADC_Battery.c ****                  (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/ADC_Battery.c ****                 diff_zero = ADC_Battery_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/ADC_Battery.c ****             #endif /* End ADC_Battery_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/ADC_Battery.c ****             break;
  51              		.loc 1 645 0
  52 001a 06E0     		b	.L3
  53              	.LVL2:
  54              	.L7:
 646:Generated_Source\PSoC5/ADC_Battery.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/ADC_Battery.c ****             counts = 0;
 648:Generated_Source\PSoC5/ADC_Battery.c ****             #if(!((ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/ADC_Battery.c ****                  (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/ADC_Battery.c ****                  (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/ADC_Battery.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/ADC_Battery.c ****             #endif /* End ADC_Battery_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/ADC_Battery.c ****             CYASSERT(0u != 0u);
  55              		.loc 1 653 0
  56 001c 0020     		movs	r0, #0
  57              	.LVL3:
  58 001e FFF7FEFF 		bl	CyHalt
  59              	.LVL4:
 647:Generated_Source\PSoC5/ADC_Battery.c ****             #if(!((ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSS_TO_VREF) || \
  60              		.loc 1 647 0
  61 0022 0022     		movs	r2, #0
  62 0024 01E0     		b	.L3
  63              	.LVL5:
  64              	.L6:
 631:Generated_Source\PSoC5/ADC_Battery.c ****             #if(!((ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSS_TO_VREF) || \
  65              		.loc 1 631 0
  66 0026 4FF48062 		mov	r2, #1024
  67              	.LVL6:
  68              	.L3:
 654:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 655:Generated_Source\PSoC5/ADC_Battery.c ****     }
 656:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_countsPerVolt = 0; /* Clear obsolete variable */
  69              		.loc 1 656 0
  70 002a 0021     		movs	r1, #0
  71 002c 094B     		ldr	r3, .L9
  72 002e 1980     		strh	r1, [r3]	@ movhi
 657:Generated_Source\PSoC5/ADC_Battery.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_countsPer10Volt = (((counts * ADC_Battery_10MV_COUNTS) +
  73              		.loc 1 658 0
  74 0030 42F21073 		movw	r3, #10000
  75 0034 03FB02F3 		mul	r3, r3, r2
  76 0038 03F6C413 		addw	r3, r3, #2500
 659:Generated_Source\PSoC5/ADC_Battery.c ****                         ADC_Battery_DEFAULT_REF_VOLTAGE_MV) / (ADC_Battery_DEFAULT_REF_VOLTAGE_MV *
  77              		.loc 1 659 0
  78 003c 064A     		ldr	r2, .L9+4
  79              	.LVL7:
  80 003e 82FB0302 		smull	r0, r2, r2, r3
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 14


  81 0042 DB17     		asrs	r3, r3, #31
  82 0044 C3EBE223 		rsb	r3, r3, r2, asr #11
 658:Generated_Source\PSoC5/ADC_Battery.c ****                         ADC_Battery_DEFAULT_REF_VOLTAGE_MV) / (ADC_Battery_DEFAULT_REF_VOLTAGE_MV *
  83              		.loc 1 658 0
  84 0048 044A     		ldr	r2, .L9+8
  85 004a 1360     		str	r3, [r2]
 660:Generated_Source\PSoC5/ADC_Battery.c **** 
 661:Generated_Source\PSoC5/ADC_Battery.c ****     #if( (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/ADC_Battery.c ****          (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/ADC_Battery.c ****          (ADC_Battery_DEFAULT_RANGE == ADC_Battery__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_shift = 0;
  86              		.loc 1 664 0
  87 004c 044B     		ldr	r3, .L9+12
  88 004e 1980     		strh	r1, [r3]	@ movhi
  89 0050 08BD     		pop	{r3, pc}
  90              	.L10:
  91 0052 00BF     		.align	2
  92              	.L9:
  93 0054 00000000 		.word	ADC_Battery_countsPerVolt
  94 0058 AD8BDB68 		.word	1759218605
  95 005c 00000000 		.word	ADC_Battery_countsPer10Volt
  96 0060 00000000 		.word	ADC_Battery_shift
  97              		.cfi_endproc
  98              	.LFE12:
  99              		.size	ADC_Battery_CalcGain, .-ADC_Battery_CalcGain
 100              		.section	.text.ADC_Battery_Enable,"ax",%progbits
 101              		.align	2
 102              		.global	ADC_Battery_Enable
 103              		.thumb
 104              		.thumb_func
 105              		.type	ADC_Battery_Enable, %function
 106              	ADC_Battery_Enable:
 107              	.LFB2:
 144:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 tmpReg;
 108              		.loc 1 144 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 10B5     		push	{r4, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 147:Generated_Source\PSoC5/ADC_Battery.c **** 
 116              		.loc 1 147 0
 117 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 118              	.LVL8:
 119 0006 0446     		mov	r4, r0
 120              	.LVL9:
 150:Generated_Source\PSoC5/ADC_Battery.c **** 
 121              		.loc 1 150 0
 122 0008 1E4A     		ldr	r2, .L13
 123 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 124 000c 43F00203 		orr	r3, r3, #2
 125 0010 1370     		strb	r3, [r2]
 153:Generated_Source\PSoC5/ADC_Battery.c **** 
 126              		.loc 1 153 0
 127 0012 1032     		adds	r2, r2, #16
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 15


 128 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 129 0016 43F00203 		orr	r3, r3, #2
 130 001a 1370     		strb	r3, [r2]
 157:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_STBY_PWRMGR_CLK_REG |= ADC_Battery_STBY_PWR_CLK_EN;
 131              		.loc 1 157 0
 132 001c 193A     		subs	r2, r2, #25
 133 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 134 0020 43F00103 		orr	r3, r3, #1
 135 0024 1370     		strb	r3, [r2]
 158:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* End ADC_Battery_DEFAULT_INTERNAL_CLK */
 136              		.loc 1 158 0
 137 0026 1032     		adds	r2, r2, #16
 138 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 139 002a 43F00103 		orr	r3, r3, #1
 140 002e 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/ADC_Battery.c ****     tmpReg |= ADC_Battery_SAR_EN_BUF_VCM_EN;
 141              		.loc 1 162 0
 142 0030 02F5AA52 		add	r2, r2, #5440
 143 0034 1932     		adds	r2, r2, #25
 144 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 145              	.LVL10:
 169:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* ADC_Battery_DEFAULT_REFERENCE == ADC_Battery__EXT_REF */
 146              		.loc 1 169 0
 147 0038 43F00303 		orr	r3, r3, #3
 148              	.LVL11:
 171:Generated_Source\PSoC5/ADC_Battery.c **** 
 149              		.loc 1 171 0
 150 003c 1370     		strb	r3, [r2]
 184:Generated_Source\PSoC5/ADC_Battery.c ****         #endif /* ADC_Battery_DEFAULT_REFERENCE == ADC_Battery__INT_REF_NOT_BYPASSED */
 151              		.loc 1 184 0
 152 003e 0422     		movs	r2, #4
 153 0040 114B     		ldr	r3, .L13+4
 154              	.LVL12:
 155 0042 1A70     		strb	r2, [r3]
 156              	.LVL13:
 190:Generated_Source\PSoC5/ADC_Battery.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 157              		.loc 1 190 0
 158 0044 013B     		subs	r3, r3, #1
 159 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 160 0048 02F0BF02 		and	r2, r2, #191
 161 004c 1A70     		strb	r2, [r3]
 200:Generated_Source\PSoC5/ADC_Battery.c ****     #else /* for <500ksps */
 162              		.loc 1 200 0
 163 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 164 0050 42F00302 		orr	r2, r2, #3
 165 0054 1A70     		strb	r2, [r3]
 206:Generated_Source\PSoC5/ADC_Battery.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 166              		.loc 1 206 0
 167 0056 0822     		movs	r2, #8
 168 0058 053B     		subs	r3, r3, #5
 169 005a 1A70     		strb	r2, [r3]
 218:Generated_Source\PSoC5/ADC_Battery.c **** 
 170              		.loc 1 218 0
 171 005c 0222     		movs	r2, #2
 172 005e A3F59753 		sub	r3, r3, #4832
 173 0062 123B     		subs	r3, r3, #18
 174 0064 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 16


 221:Generated_Source\PSoC5/ADC_Battery.c **** 
 175              		.loc 1 221 0
 176 0066 094A     		ldr	r2, .L13+8
 177 0068 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 178 006a 43F00803 		orr	r3, r3, #8
 179 006e 1370     		strb	r3, [r2]
 223:Generated_Source\PSoC5/ADC_Battery.c **** 
 180              		.loc 1 223 0
 181 0070 0A20     		movs	r0, #10
 182 0072 FFF7FEFF 		bl	CyDelayUs
 183              	.LVL14:
 227:Generated_Source\PSoC5/ADC_Battery.c ****     #endif   /* End ADC_Battery_IRQ_REMOVE */
 184              		.loc 1 227 0
 185 0076 0122     		movs	r2, #1
 186 0078 054B     		ldr	r3, .L13+12
 187 007a 1A60     		str	r2, [r3]
 230:Generated_Source\PSoC5/ADC_Battery.c **** }
 188              		.loc 1 230 0
 189 007c 2046     		mov	r0, r4
 190 007e FFF7FEFF 		bl	CyExitCriticalSection
 191              	.LVL15:
 192 0082 10BD     		pop	{r4, pc}
 193              	.LVL16:
 194              	.L14:
 195              		.align	2
 196              	.L13:
 197 0084 AB430040 		.word	1073759147
 198 0088 0E590040 		.word	1073764622
 199 008c 2F5B0040 		.word	1073765167
 200 0090 80E200E0 		.word	-536812928
 201              		.cfi_endproc
 202              	.LFE2:
 203              		.size	ADC_Battery_Enable, .-ADC_Battery_Enable
 204              		.section	.text.ADC_Battery_Stop,"ax",%progbits
 205              		.align	2
 206              		.global	ADC_Battery_Stop
 207              		.thumb
 208              		.thumb_func
 209              		.type	ADC_Battery_Stop, %function
 210              	ADC_Battery_Stop:
 211              	.LFB3:
 249:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 enableInterrupts;
 212              		.loc 1 249 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 08B5     		push	{r3, lr}
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 3, -8
 219              		.cfi_offset 14, -4
 251:Generated_Source\PSoC5/ADC_Battery.c **** 
 220              		.loc 1 251 0
 221 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 222              	.LVL17:
 254:Generated_Source\PSoC5/ADC_Battery.c ****     /* Disable the SAR ADC block in Active Power Mode */
 223              		.loc 1 254 0
 224 0006 0F4A     		ldr	r2, .L17
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 17


 225 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 226 000a 03F0FE03 		and	r3, r3, #254
 227 000e 1370     		strb	r3, [r2]
 256:Generated_Source\PSoC5/ADC_Battery.c ****     /* Disable the SAR ADC in Standby Power Mode */
 228              		.loc 1 256 0
 229 0010 A2F5AA52 		sub	r2, r2, #5440
 230 0014 1D3A     		subs	r2, r2, #29
 231 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 232 0018 03F0FD03 		and	r3, r3, #253
 233 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/ADC_Battery.c **** 
 234              		.loc 1 258 0
 235 001e 1032     		adds	r2, r2, #16
 236 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 237 0022 03F0FD03 		and	r3, r3, #253
 238 0026 1370     		strb	r3, [r2]
 262:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_Battery_STBY_PWR_CLK_EN;
 239              		.loc 1 262 0
 240 0028 193A     		subs	r2, r2, #25
 241 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 242 002c 03F0FE03 		and	r3, r3, #254
 243 0030 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* End ADC_Battery_DEFAULT_INTERNAL_CLK */
 244              		.loc 1 263 0
 245 0032 1032     		adds	r2, r2, #16
 246 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 247 0036 03F0FE03 		and	r3, r3, #254
 248 003a 1370     		strb	r3, [r2]
 266:Generated_Source\PSoC5/ADC_Battery.c **** 
 249              		.loc 1 266 0
 250 003c FFF7FEFF 		bl	CyExitCriticalSection
 251              	.LVL18:
 252 0040 08BD     		pop	{r3, pc}
 253              	.L18:
 254 0042 00BF     		.align	2
 255              	.L17:
 256 0044 08590040 		.word	1073764616
 257              		.cfi_endproc
 258              	.LFE3:
 259              		.size	ADC_Battery_Stop, .-ADC_Battery_Stop
 260              		.section	.text.ADC_Battery_SetPower,"ax",%progbits
 261              		.align	2
 262              		.global	ADC_Battery_SetPower
 263              		.thumb
 264              		.thumb_func
 265              		.type	ADC_Battery_SetPower, %function
 266              	ADC_Battery_SetPower:
 267              	.LFB4:
 291:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 tmpReg;
 268              		.loc 1 291 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273              	.LVL19:
 295:Generated_Source\PSoC5/ADC_Battery.c **** 
 274              		.loc 1 295 0
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 18


 275 0000 00F00300 		and	r0, r0, #3
 276              	.LVL20:
 298:Generated_Source\PSoC5/ADC_Battery.c ****     tmpReg |= (uint8)(power << ADC_Battery_SAR_POWER_SHIFT);
 277              		.loc 1 298 0
 278 0004 034A     		ldr	r2, .L20
 279 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 280 0008 03F03F03 		and	r3, r3, #63
 281              	.LVL21:
 299:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_SAR_CSR0_REG = tmpReg;
 282              		.loc 1 299 0
 283 000c 43EA8010 		orr	r0, r3, r0, lsl #6
 284              	.LVL22:
 300:Generated_Source\PSoC5/ADC_Battery.c **** }
 285              		.loc 1 300 0
 286 0010 1070     		strb	r0, [r2]
 287 0012 7047     		bx	lr
 288              	.L21:
 289              		.align	2
 290              	.L20:
 291 0014 08590040 		.word	1073764616
 292              		.cfi_endproc
 293              	.LFE4:
 294              		.size	ADC_Battery_SetPower, .-ADC_Battery_SetPower
 295              		.section	.text.ADC_Battery_SetResolution,"ax",%progbits
 296              		.align	2
 297              		.global	ADC_Battery_SetResolution
 298              		.thumb
 299              		.thumb_func
 300              		.type	ADC_Battery_SetResolution, %function
 301              	ADC_Battery_SetResolution:
 302              	.LFB5:
 341:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 tmpReg;
 303              		.loc 1 341 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL23:
 308 0000 10B5     		push	{r4, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 14, -4
 312 0002 0446     		mov	r4, r0
 345:Generated_Source\PSoC5/ADC_Battery.c ****     {
 313              		.loc 1 345 0
 314 0004 0A28     		cmp	r0, #10
 315 0006 0DD0     		beq	.L27
 316 0008 0C28     		cmp	r0, #12
 317 000a 02D0     		beq	.L25
 318 000c 0828     		cmp	r0, #8
 319 000e 04D1     		bne	.L28
 320 0010 01E0     		b	.L26
 321              	.L25:
 348:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 322              		.loc 1 348 0
 323 0012 C422     		movs	r2, #196
 324 0014 07E0     		b	.L24
 325              	.L26:
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 19


 326              	.LVL24:
 354:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 327              		.loc 1 354 0
 328 0016 4422     		movs	r2, #68
 355:Generated_Source\PSoC5/ADC_Battery.c ****         default:
 329              		.loc 1 355 0
 330 0018 05E0     		b	.L24
 331              	.LVL25:
 332              	.L28:
 359:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 333              		.loc 1 359 0
 334 001a 0020     		movs	r0, #0
 335              	.LVL26:
 336 001c FFF7FEFF 		bl	CyHalt
 337              	.LVL27:
 357:Generated_Source\PSoC5/ADC_Battery.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 338              		.loc 1 357 0
 339 0020 C422     		movs	r2, #196
 340 0022 00E0     		b	.L24
 341              	.LVL28:
 342              	.L27:
 351:Generated_Source\PSoC5/ADC_Battery.c ****             break;
 343              		.loc 1 351 0
 344 0024 8422     		movs	r2, #132
 345              	.LVL29:
 346              	.L24:
 362:Generated_Source\PSoC5/ADC_Battery.c **** 
 347              		.loc 1 362 0
 348 0026 034B     		ldr	r3, .L30
 349 0028 1A70     		strb	r2, [r3]
 365:Generated_Source\PSoC5/ADC_Battery.c **** }
 350              		.loc 1 365 0
 351 002a 2046     		mov	r0, r4
 352 002c FFF7FEFF 		bl	ADC_Battery_CalcGain
 353              	.LVL30:
 354 0030 10BD     		pop	{r4, pc}
 355              	.L31:
 356 0032 00BF     		.align	2
 357              	.L30:
 358 0034 0A590040 		.word	1073764618
 359              		.cfi_endproc
 360              	.LFE5:
 361              		.size	ADC_Battery_SetResolution, .-ADC_Battery_SetResolution
 362              		.section	.text.ADC_Battery_Init,"ax",%progbits
 363              		.align	2
 364              		.global	ADC_Battery_Init
 365              		.thumb
 366              		.thumb_func
 367              		.type	ADC_Battery_Init, %function
 368              	ADC_Battery_Init:
 369              	.LFB1:
 107:Generated_Source\PSoC5/ADC_Battery.c **** 
 370              		.loc 1 107 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 20


 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 3, -8
 377              		.cfi_offset 14, -4
 111:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* End ADC_Battery_DEFAULT_INTERNAL_CLK */
 378              		.loc 1 111 0
 379 0002 1020     		movs	r0, #16
 380 0004 FFF7FEFF 		bl	ADC_Battery_theACLK_SetModeRegister
 381              	.LVL31:
 116:Generated_Source\PSoC5/ADC_Battery.c ****         (void)CyIntSetVector(ADC_Battery_INTC_NUMBER, &ADC_Battery_ISR);
 382              		.loc 1 116 0
 383 0008 0020     		movs	r0, #0
 384 000a 0721     		movs	r1, #7
 385 000c FFF7FEFF 		bl	CyIntSetPriority
 386              	.LVL32:
 117:Generated_Source\PSoC5/ADC_Battery.c ****     #endif   /* End ADC_Battery_IRQ_REMOVE */
 387              		.loc 1 117 0
 388 0010 0020     		movs	r0, #0
 389 0012 0749     		ldr	r1, .L34
 390 0014 FFF7FEFF 		bl	CyIntSetVector
 391              	.LVL33:
 121:Generated_Source\PSoC5/ADC_Battery.c **** 
 392              		.loc 1 121 0
 393 0018 064A     		ldr	r2, .L34+4
 394 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 395 001c 43F00603 		orr	r3, r3, #6
 396 0020 1370     		strb	r3, [r2]
 124:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_offset = 0;
 397              		.loc 1 124 0
 398 0022 0C20     		movs	r0, #12
 399 0024 FFF7FEFF 		bl	ADC_Battery_SetResolution
 400              	.LVL34:
 125:Generated_Source\PSoC5/ADC_Battery.c **** }
 401              		.loc 1 125 0
 402 0028 0022     		movs	r2, #0
 403 002a 034B     		ldr	r3, .L34+8
 404 002c 1A80     		strh	r2, [r3]	@ movhi
 405 002e 08BD     		pop	{r3, pc}
 406              	.L35:
 407              		.align	2
 408              	.L34:
 409 0030 00000000 		.word	ADC_Battery_ISR
 410 0034 09590040 		.word	1073764617
 411 0038 00000000 		.word	ADC_Battery_offset
 412              		.cfi_endproc
 413              	.LFE1:
 414              		.size	ADC_Battery_Init, .-ADC_Battery_Init
 415              		.section	.text.ADC_Battery_Start,"ax",%progbits
 416              		.align	2
 417              		.global	ADC_Battery_Start
 418              		.thumb
 419              		.thumb_func
 420              		.type	ADC_Battery_Start, %function
 421              	ADC_Battery_Start:
 422              	.LFB0:
  75:Generated_Source\PSoC5/ADC_Battery.c **** 
 423              		.loc 1 75 0
 424              		.cfi_startproc
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 21


 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427 0000 08B5     		push	{r3, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 3, -8
 430              		.cfi_offset 14, -4
  78:Generated_Source\PSoC5/ADC_Battery.c ****     {
 431              		.loc 1 78 0
 432 0002 054B     		ldr	r3, .L39
 433 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 434 0006 23B9     		cbnz	r3, .L37
  80:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_initVar = 1u;
 435              		.loc 1 80 0
 436 0008 FFF7FEFF 		bl	ADC_Battery_Init
 437              	.LVL35:
  81:Generated_Source\PSoC5/ADC_Battery.c ****     }
 438              		.loc 1 81 0
 439 000c 0122     		movs	r2, #1
 440 000e 024B     		ldr	r3, .L39
 441 0010 1A70     		strb	r2, [r3]
 442              	.L37:
  83:Generated_Source\PSoC5/ADC_Battery.c **** }
 443              		.loc 1 83 0
 444 0012 FFF7FEFF 		bl	ADC_Battery_Enable
 445              	.LVL36:
 446 0016 08BD     		pop	{r3, pc}
 447              	.L40:
 448              		.align	2
 449              	.L39:
 450 0018 00000000 		.word	.LANCHOR0
 451              		.cfi_endproc
 452              	.LFE0:
 453              		.size	ADC_Battery_Start, .-ADC_Battery_Start
 454              		.section	.text.ADC_Battery_StartConvert,"ax",%progbits
 455              		.align	2
 456              		.global	ADC_Battery_StartConvert
 457              		.thumb
 458              		.thumb_func
 459              		.type	ADC_Battery_StartConvert, %function
 460              	ADC_Battery_StartConvert:
 461              	.LFB6:
 402:Generated_Source\PSoC5/ADC_Battery.c ****         #if(ADC_Battery_DEFAULT_CONV_MODE != ADC_Battery__FREE_RUNNING)  /* If software triggered m
 462              		.loc 1 402 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 408:Generated_Source\PSoC5/ADC_Battery.c ****     }
 467              		.loc 1 408 0
 468 0000 024A     		ldr	r2, .L42
 469 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 470 0004 43F00103 		orr	r3, r3, #1
 471 0008 1370     		strb	r3, [r2]
 472 000a 7047     		bx	lr
 473              	.L43:
 474              		.align	2
 475              	.L42:
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 22


 476 000c 08590040 		.word	1073764616
 477              		.cfi_endproc
 478              	.LFE6:
 479              		.size	ADC_Battery_StartConvert, .-ADC_Battery_StartConvert
 480              		.section	.text.ADC_Battery_StopConvert,"ax",%progbits
 481              		.align	2
 482              		.global	ADC_Battery_StopConvert
 483              		.thumb
 484              		.thumb_func
 485              		.type	ADC_Battery_StopConvert, %function
 486              	ADC_Battery_StopConvert:
 487              	.LFB7:
 436:Generated_Source\PSoC5/ADC_Battery.c ****         /* Stop all conversions */
 488              		.loc 1 436 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 438:Generated_Source\PSoC5/ADC_Battery.c **** 
 493              		.loc 1 438 0
 494 0000 024A     		ldr	r2, .L45
 495 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 496 0004 03F0FE03 		and	r3, r3, #254
 497 0008 1370     		strb	r3, [r2]
 498 000a 7047     		bx	lr
 499              	.L46:
 500              		.align	2
 501              	.L45:
 502 000c 08590040 		.word	1073764616
 503              		.cfi_endproc
 504              	.LFE7:
 505              		.size	ADC_Battery_StopConvert, .-ADC_Battery_StopConvert
 506              		.section	.text.ADC_Battery_IsEndConversion,"ax",%progbits
 507              		.align	2
 508              		.global	ADC_Battery_IsEndConversion
 509              		.thumb
 510              		.thumb_func
 511              		.type	ADC_Battery_IsEndConversion, %function
 512              	ADC_Battery_IsEndConversion:
 513              	.LFB8:
 476:Generated_Source\PSoC5/ADC_Battery.c ****     uint8 status;
 514              		.loc 1 476 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              	.LVL37:
 519 0000 10B5     		push	{r4, lr}
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 4, -8
 522              		.cfi_offset 14, -4
 523              	.L49:
 481:Generated_Source\PSoC5/ADC_Battery.c ****     } while ((status != ADC_Battery_SAR_EOF_1) && (retMode == ADC_Battery_WAIT_FOR_RESULT));
 524              		.loc 1 481 0 discriminator 2
 525 0002 074B     		ldr	r3, .L52
 526 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527              	.LVL38:
 482:Generated_Source\PSoC5/ADC_Battery.c ****     /* If convertion complete, wait until EOF bit released */
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 23


 528              		.loc 1 482 0 discriminator 2
 529 0006 13F00104 		ands	r4, r3, #1
 530 000a 01D1     		bne	.L48
 482:Generated_Source\PSoC5/ADC_Battery.c ****     /* If convertion complete, wait until EOF bit released */
 531              		.loc 1 482 0 is_stmt 0 discriminator 1
 532 000c 0028     		cmp	r0, #0
 533 000e F8D0     		beq	.L49
 534              	.L48:
 484:Generated_Source\PSoC5/ADC_Battery.c ****     {
 535              		.loc 1 484 0 is_stmt 1
 536 0010 24B1     		cbz	r4, .L50
 487:Generated_Source\PSoC5/ADC_Battery.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 537              		.loc 1 487 0
 538 0012 0120     		movs	r0, #1
 539              	.LVL39:
 540 0014 FFF7FEFF 		bl	CyDelayUs
 541              	.LVL40:
 489:Generated_Source\PSoC5/ADC_Battery.c ****     }
 542              		.loc 1 489 0
 543 0018 014B     		ldr	r3, .L52
 544 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 545              	.L50:
 493:Generated_Source\PSoC5/ADC_Battery.c **** 
 546              		.loc 1 493 0
 547 001c 2046     		mov	r0, r4
 548 001e 10BD     		pop	{r4, pc}
 549              	.L53:
 550              		.align	2
 551              	.L52:
 552 0020 09590040 		.word	1073764617
 553              		.cfi_endproc
 554              	.LFE8:
 555              		.size	ADC_Battery_IsEndConversion, .-ADC_Battery_IsEndConversion
 556              		.section	.text.ADC_Battery_GetResult8,"ax",%progbits
 557              		.align	2
 558              		.global	ADC_Battery_GetResult8
 559              		.thumb
 560              		.thumb_func
 561              		.type	ADC_Battery_GetResult8, %function
 562              	ADC_Battery_GetResult8:
 563              	.LFB9:
 521:Generated_Source\PSoC5/ADC_Battery.c ****     return( (int8)ADC_Battery_SAR_WRK0_REG - (int8)ADC_Battery_shift);
 564              		.loc 1 521 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 522:Generated_Source\PSoC5/ADC_Battery.c **** }
 569              		.loc 1 522 0
 570 0000 034B     		ldr	r3, .L55
 571 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 572 0004 034A     		ldr	r2, .L55+4
 573 0006 1088     		ldrh	r0, [r2]
 574 0008 181A     		subs	r0, r3, r0
 523:Generated_Source\PSoC5/ADC_Battery.c **** 
 575              		.loc 1 523 0
 576 000a 40B2     		sxtb	r0, r0
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 24


 577 000c 7047     		bx	lr
 578              	.L56:
 579 000e 00BF     		.align	2
 580              	.L55:
 581 0010 A25B0040 		.word	1073765282
 582 0014 00000000 		.word	ADC_Battery_shift
 583              		.cfi_endproc
 584              	.LFE9:
 585              		.size	ADC_Battery_GetResult8, .-ADC_Battery_GetResult8
 586              		.section	.text.ADC_Battery_GetResult16,"ax",%progbits
 587              		.align	2
 588              		.global	ADC_Battery_GetResult16
 589              		.thumb
 590              		.thumb_func
 591              		.type	ADC_Battery_GetResult16, %function
 592              	ADC_Battery_GetResult16:
 593              	.LFB10:
 551:Generated_Source\PSoC5/ADC_Battery.c ****     uint16 res;
 594              		.loc 1 551 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 554:Generated_Source\PSoC5/ADC_Battery.c **** 
 599              		.loc 1 554 0
 600 0000 034B     		ldr	r3, .L58
 601 0002 1B88     		ldrh	r3, [r3]
 602              	.LVL41:
 556:Generated_Source\PSoC5/ADC_Battery.c **** }
 603              		.loc 1 556 0
 604 0004 034A     		ldr	r2, .L58+4
 605 0006 1088     		ldrh	r0, [r2]
 606 0008 181A     		subs	r0, r3, r0
 557:Generated_Source\PSoC5/ADC_Battery.c **** 
 607              		.loc 1 557 0
 608 000a 00B2     		sxth	r0, r0
 609 000c 7047     		bx	lr
 610              	.L59:
 611 000e 00BF     		.align	2
 612              	.L58:
 613 0010 A25B0040 		.word	1073765282
 614 0014 00000000 		.word	ADC_Battery_shift
 615              		.cfi_endproc
 616              	.LFE10:
 617              		.size	ADC_Battery_GetResult16, .-ADC_Battery_GetResult16
 618              		.section	.text.ADC_Battery_SetOffset,"ax",%progbits
 619              		.align	2
 620              		.global	ADC_Battery_SetOffset
 621              		.thumb
 622              		.thumb_func
 623              		.type	ADC_Battery_SetOffset, %function
 624              	ADC_Battery_SetOffset:
 625              	.LFB11:
 586:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_offset = offset;
 626              		.loc 1 586 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 25


 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631              	.LVL42:
 587:Generated_Source\PSoC5/ADC_Battery.c **** }
 632              		.loc 1 587 0
 633 0000 014B     		ldr	r3, .L61
 634 0002 1880     		strh	r0, [r3]	@ movhi
 635 0004 7047     		bx	lr
 636              	.L62:
 637 0006 00BF     		.align	2
 638              	.L61:
 639 0008 00000000 		.word	ADC_Battery_offset
 640              		.cfi_endproc
 641              	.LFE11:
 642              		.size	ADC_Battery_SetOffset, .-ADC_Battery_SetOffset
 643              		.section	.text.ADC_Battery_SetGain,"ax",%progbits
 644              		.align	2
 645              		.global	ADC_Battery_SetGain
 646              		.thumb
 647              		.thumb_func
 648              		.type	ADC_Battery_SetGain, %function
 649              	ADC_Battery_SetGain:
 650              	.LFB13:
 665:Generated_Source\PSoC5/ADC_Battery.c ****     #else
 666:Generated_Source\PSoC5/ADC_Battery.c ****         ADC_Battery_shift = diff_zero;
 667:Generated_Source\PSoC5/ADC_Battery.c ****     #endif /* End ADC_Battery_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/ADC_Battery.c **** }
 669:Generated_Source\PSoC5/ADC_Battery.c **** 
 670:Generated_Source\PSoC5/ADC_Battery.c **** 
 671:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_SetGain
 673:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 674:Generated_Source\PSoC5/ADC_Battery.c **** *
 675:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 676:Generated_Source\PSoC5/ADC_Battery.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/ADC_Battery.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/ADC_Battery.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/ADC_Battery.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/ADC_Battery.c **** *
 681:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 682:Generated_Source\PSoC5/ADC_Battery.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/ADC_Battery.c **** *
 684:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 685:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 686:Generated_Source\PSoC5/ADC_Battery.c **** *
 687:Generated_Source\PSoC5/ADC_Battery.c **** * Global Variables:
 688:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/ADC_Battery.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/ADC_Battery.c **** *
 691:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/ADC_Battery.c **** void ADC_Battery_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/ADC_Battery.c **** {
 651              		.loc 1 693 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              		@ link register save eliminated.
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 26


 656              	.LVL43:
 694:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_countsPer10Volt = (int32)adcGain * 10;
 657              		.loc 1 694 0
 658 0000 00EB8000 		add	r0, r0, r0, lsl #2
 659              	.LVL44:
 660 0004 4000     		lsls	r0, r0, #1
 661 0006 014B     		ldr	r3, .L64
 662 0008 1860     		str	r0, [r3]
 663 000a 7047     		bx	lr
 664              	.L65:
 665              		.align	2
 666              	.L64:
 667 000c 00000000 		.word	ADC_Battery_countsPer10Volt
 668              		.cfi_endproc
 669              	.LFE13:
 670              		.size	ADC_Battery_SetGain, .-ADC_Battery_SetGain
 671              		.section	.text.ADC_Battery_SetScaledGain,"ax",%progbits
 672              		.align	2
 673              		.global	ADC_Battery_SetScaledGain
 674              		.thumb
 675              		.thumb_func
 676              		.type	ADC_Battery_SetScaledGain, %function
 677              	ADC_Battery_SetScaledGain:
 678              	.LFB14:
 695:Generated_Source\PSoC5/ADC_Battery.c **** }
 696:Generated_Source\PSoC5/ADC_Battery.c **** 
 697:Generated_Source\PSoC5/ADC_Battery.c **** 
 698:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_SetScaledGain
 700:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 701:Generated_Source\PSoC5/ADC_Battery.c **** *
 702:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 703:Generated_Source\PSoC5/ADC_Battery.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/ADC_Battery.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/ADC_Battery.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/ADC_Battery.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/ADC_Battery.c **** *
 708:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 709:Generated_Source\PSoC5/ADC_Battery.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/ADC_Battery.c **** *
 711:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 712:Generated_Source\PSoC5/ADC_Battery.c **** *  None.
 713:Generated_Source\PSoC5/ADC_Battery.c **** *
 714:Generated_Source\PSoC5/ADC_Battery.c **** * Global Variables:
 715:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/ADC_Battery.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/ADC_Battery.c **** *
 718:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/ADC_Battery.c **** void ADC_Battery_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/ADC_Battery.c **** {
 679              		.loc 1 720 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 684              	.LVL45:
 721:Generated_Source\PSoC5/ADC_Battery.c ****     ADC_Battery_countsPer10Volt = adcGain;
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 27


 685              		.loc 1 721 0
 686 0000 014B     		ldr	r3, .L67
 687 0002 1860     		str	r0, [r3]
 688 0004 7047     		bx	lr
 689              	.L68:
 690 0006 00BF     		.align	2
 691              	.L67:
 692 0008 00000000 		.word	ADC_Battery_countsPer10Volt
 693              		.cfi_endproc
 694              	.LFE14:
 695              		.size	ADC_Battery_SetScaledGain, .-ADC_Battery_SetScaledGain
 696              		.section	.text.ADC_Battery_CountsTo_mVolts,"ax",%progbits
 697              		.align	2
 698              		.global	ADC_Battery_CountsTo_mVolts
 699              		.thumb
 700              		.thumb_func
 701              		.type	ADC_Battery_CountsTo_mVolts, %function
 702              	ADC_Battery_CountsTo_mVolts:
 703              	.LFB15:
 722:Generated_Source\PSoC5/ADC_Battery.c **** }
 723:Generated_Source\PSoC5/ADC_Battery.c **** 
 724:Generated_Source\PSoC5/ADC_Battery.c **** 
 725:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_CountsTo_mVolts
 727:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 728:Generated_Source\PSoC5/ADC_Battery.c **** *
 729:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 730:Generated_Source\PSoC5/ADC_Battery.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/ADC_Battery.c **** *
 732:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 733:Generated_Source\PSoC5/ADC_Battery.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/ADC_Battery.c **** *
 735:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 736:Generated_Source\PSoC5/ADC_Battery.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/ADC_Battery.c **** *
 738:Generated_Source\PSoC5/ADC_Battery.c **** * Global Variables:
 739:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_offset variable used.
 740:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/ADC_Battery.c **** *
 742:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/ADC_Battery.c **** int16 ADC_Battery_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/ADC_Battery.c **** {
 704              		.loc 1 744 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709              	.LVL46:
 745:Generated_Source\PSoC5/ADC_Battery.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/ADC_Battery.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/ADC_Battery.c **** 
 748:Generated_Source\PSoC5/ADC_Battery.c ****     if(ADC_Battery_countsPerVolt != 0)
 710              		.loc 1 748 0
 711 0000 114B     		ldr	r3, .L74
 712 0002 1B88     		ldrh	r3, [r3]
 713 0004 9BB2     		uxth	r3, r3
 714 0006 33B1     		cbz	r3, .L70
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 28


 749:Generated_Source\PSoC5/ADC_Battery.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/ADC_Battery.c ****         countsPer10Volt = (int32)ADC_Battery_countsPerVolt * 10;
 715              		.loc 1 750 0
 716 0008 0F4B     		ldr	r3, .L74
 717 000a 1988     		ldrh	r1, [r3]
 718 000c 09B2     		sxth	r1, r1
 719 000e 01EB8101 		add	r1, r1, r1, lsl #2
 720 0012 4900     		lsls	r1, r1, #1
 721              	.LVL47:
 722 0014 01E0     		b	.L71
 723              	.LVL48:
 724              	.L70:
 751:Generated_Source\PSoC5/ADC_Battery.c ****     }
 752:Generated_Source\PSoC5/ADC_Battery.c ****     else
 753:Generated_Source\PSoC5/ADC_Battery.c ****     {
 754:Generated_Source\PSoC5/ADC_Battery.c ****         countsPer10Volt = ADC_Battery_countsPer10Volt;
 725              		.loc 1 754 0
 726 0016 0D4B     		ldr	r3, .L74+4
 727 0018 1968     		ldr	r1, [r3]
 728              	.LVL49:
 729              	.L71:
 755:Generated_Source\PSoC5/ADC_Battery.c ****     }
 756:Generated_Source\PSoC5/ADC_Battery.c **** 
 757:Generated_Source\PSoC5/ADC_Battery.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/ADC_Battery.c ****     adcCounts -= ADC_Battery_offset;
 730              		.loc 1 758 0
 731 001a 0D4B     		ldr	r3, .L74+8
 732 001c 1A88     		ldrh	r2, [r3]
 733 001e 821A     		subs	r2, r0, r2
 734 0020 12B2     		sxth	r2, r2
 735              	.LVL50:
 759:Generated_Source\PSoC5/ADC_Battery.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/ADC_Battery.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_Battery_10MV_COUNTS ) + ( (adcCounts > 0) ?
 736              		.loc 1 760 0
 737 0022 42F21070 		movw	r0, #10000
 738 0026 00FB02F0 		mul	r0, r0, r2
 761:Generated_Source\PSoC5/ADC_Battery.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 739              		.loc 1 761 0
 740 002a 002A     		cmp	r2, #0
 741 002c 03DD     		ble	.L72
 742              		.loc 1 761 0 is_stmt 0 discriminator 1
 743 002e 01EBD173 		add	r3, r1, r1, lsr #31
 744 0032 5B10     		asrs	r3, r3, #1
 745 0034 03E0     		b	.L73
 746              	.L72:
 747              		.loc 1 761 0 discriminator 2
 748 0036 01EBD172 		add	r2, r1, r1, lsr #31
 749              	.LVL51:
 750 003a 5210     		asrs	r2, r2, #1
 751 003c 5342     		negs	r3, r2
 752              	.L73:
 760:Generated_Source\PSoC5/ADC_Battery.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 753              		.loc 1 760 0 is_stmt 1
 754 003e 0344     		add	r3, r3, r0
 755              		.loc 1 761 0
 756 0040 93FBF1F0 		sdiv	r0, r3, r1
 757              	.LVL52:
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 29


 762:Generated_Source\PSoC5/ADC_Battery.c **** 
 763:Generated_Source\PSoC5/ADC_Battery.c ****     return( mVolts );
 764:Generated_Source\PSoC5/ADC_Battery.c **** }
 758              		.loc 1 764 0
 759 0044 00B2     		sxth	r0, r0
 760 0046 7047     		bx	lr
 761              	.L75:
 762              		.align	2
 763              	.L74:
 764 0048 00000000 		.word	ADC_Battery_countsPerVolt
 765 004c 00000000 		.word	ADC_Battery_countsPer10Volt
 766 0050 00000000 		.word	ADC_Battery_offset
 767              		.cfi_endproc
 768              	.LFE15:
 769              		.size	ADC_Battery_CountsTo_mVolts, .-ADC_Battery_CountsTo_mVolts
 770              		.global	__aeabi_ldivmod
 771              		.section	.text.ADC_Battery_CountsTo_uVolts,"ax",%progbits
 772              		.align	2
 773              		.global	ADC_Battery_CountsTo_uVolts
 774              		.thumb
 775              		.thumb_func
 776              		.type	ADC_Battery_CountsTo_uVolts, %function
 777              	ADC_Battery_CountsTo_uVolts:
 778              	.LFB16:
 765:Generated_Source\PSoC5/ADC_Battery.c **** 
 766:Generated_Source\PSoC5/ADC_Battery.c **** 
 767:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_CountsTo_uVolts
 769:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 770:Generated_Source\PSoC5/ADC_Battery.c **** *
 771:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 772:Generated_Source\PSoC5/ADC_Battery.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/ADC_Battery.c **** *
 774:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 775:Generated_Source\PSoC5/ADC_Battery.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/ADC_Battery.c **** *
 777:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 778:Generated_Source\PSoC5/ADC_Battery.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/ADC_Battery.c **** *
 780:Generated_Source\PSoC5/ADC_Battery.c **** * Global Variables:
 781:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_offset variable used.
 782:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/ADC_Battery.c **** *
 784:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/ADC_Battery.c **** int32 ADC_Battery_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/ADC_Battery.c **** {
 779              		.loc 1 786 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              	.LVL53:
 784 0000 38B5     		push	{r3, r4, r5, lr}
 785              		.cfi_def_cfa_offset 16
 786              		.cfi_offset 3, -16
 787              		.cfi_offset 4, -12
 788              		.cfi_offset 5, -8
 789              		.cfi_offset 14, -4
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 30


 787:Generated_Source\PSoC5/ADC_Battery.c **** 
 788:Generated_Source\PSoC5/ADC_Battery.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/ADC_Battery.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/ADC_Battery.c **** 
 791:Generated_Source\PSoC5/ADC_Battery.c ****     if(ADC_Battery_countsPerVolt != 0)
 790              		.loc 1 791 0
 791 0002 0D4B     		ldr	r3, .L80
 792 0004 1B88     		ldrh	r3, [r3]
 793 0006 9BB2     		uxth	r3, r3
 794 0008 33B1     		cbz	r3, .L77
 792:Generated_Source\PSoC5/ADC_Battery.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/ADC_Battery.c ****         countsPer10Volt = (int32)ADC_Battery_countsPerVolt * 10;
 795              		.loc 1 793 0
 796 000a 0B4B     		ldr	r3, .L80
 797 000c 1A88     		ldrh	r2, [r3]
 798 000e 12B2     		sxth	r2, r2
 799 0010 02EB8202 		add	r2, r2, r2, lsl #2
 800 0014 5200     		lsls	r2, r2, #1
 801              	.LVL54:
 802 0016 01E0     		b	.L78
 803              	.LVL55:
 804              	.L77:
 794:Generated_Source\PSoC5/ADC_Battery.c ****     }
 795:Generated_Source\PSoC5/ADC_Battery.c ****     else
 796:Generated_Source\PSoC5/ADC_Battery.c ****     {
 797:Generated_Source\PSoC5/ADC_Battery.c ****         countsPer10Volt = ADC_Battery_countsPer10Volt;
 805              		.loc 1 797 0
 806 0018 084B     		ldr	r3, .L80+4
 807 001a 1A68     		ldr	r2, [r3]
 808              	.LVL56:
 809              	.L78:
 798:Generated_Source\PSoC5/ADC_Battery.c ****     }
 799:Generated_Source\PSoC5/ADC_Battery.c **** 
 800:Generated_Source\PSoC5/ADC_Battery.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/ADC_Battery.c ****     adcCounts -= ADC_Battery_offset;
 810              		.loc 1 801 0
 811 001c 084B     		ldr	r3, .L80+8
 812 001e 1C88     		ldrh	r4, [r3]
 813              	.LVL57:
 802:Generated_Source\PSoC5/ADC_Battery.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/ADC_Battery.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/ADC_Battery.c ****     */
 805:Generated_Source\PSoC5/ADC_Battery.c ****     uVolts = (( (int64)adcCounts * ADC_Battery_10UV_COUNTS ) / countsPer10Volt);
 814              		.loc 1 805 0
 815 0020 041B     		subs	r4, r0, r4
 816              	.LVL58:
 817 0022 24B2     		sxth	r4, r4
 818 0024 E517     		asrs	r5, r4, #31
 819 0026 074B     		ldr	r3, .L80+12
 820 0028 A4FB0301 		umull	r0, r1, r4, r3
 821 002c 03FB0511 		mla	r1, r3, r5, r1
 822 0030 D317     		asrs	r3, r2, #31
 823 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 824              	.LVL59:
 806:Generated_Source\PSoC5/ADC_Battery.c **** 
 807:Generated_Source\PSoC5/ADC_Battery.c ****     return( uVolts );
 808:Generated_Source\PSoC5/ADC_Battery.c **** }
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 31


 825              		.loc 1 808 0
 826 0036 38BD     		pop	{r3, r4, r5, pc}
 827              	.L81:
 828              		.align	2
 829              	.L80:
 830 0038 00000000 		.word	ADC_Battery_countsPerVolt
 831 003c 00000000 		.word	ADC_Battery_countsPer10Volt
 832 0040 00000000 		.word	ADC_Battery_offset
 833 0044 80969800 		.word	10000000
 834              		.cfi_endproc
 835              	.LFE16:
 836              		.size	ADC_Battery_CountsTo_uVolts, .-ADC_Battery_CountsTo_uVolts
 837              		.global	__aeabi_i2f
 838              		.global	__aeabi_fmul
 839              		.global	__aeabi_fdiv
 840              		.section	.text.ADC_Battery_CountsTo_Volts,"ax",%progbits
 841              		.align	2
 842              		.global	ADC_Battery_CountsTo_Volts
 843              		.thumb
 844              		.thumb_func
 845              		.type	ADC_Battery_CountsTo_Volts, %function
 846              	ADC_Battery_CountsTo_Volts:
 847              	.LFB17:
 809:Generated_Source\PSoC5/ADC_Battery.c **** 
 810:Generated_Source\PSoC5/ADC_Battery.c **** 
 811:Generated_Source\PSoC5/ADC_Battery.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/ADC_Battery.c **** * Function Name: ADC_Battery_CountsTo_Volts
 813:Generated_Source\PSoC5/ADC_Battery.c **** ********************************************************************************
 814:Generated_Source\PSoC5/ADC_Battery.c **** *
 815:Generated_Source\PSoC5/ADC_Battery.c **** * Summary:
 816:Generated_Source\PSoC5/ADC_Battery.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/ADC_Battery.c **** *
 818:Generated_Source\PSoC5/ADC_Battery.c **** * Parameters:
 819:Generated_Source\PSoC5/ADC_Battery.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/ADC_Battery.c **** *
 821:Generated_Source\PSoC5/ADC_Battery.c **** * Return:
 822:Generated_Source\PSoC5/ADC_Battery.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/ADC_Battery.c **** *
 824:Generated_Source\PSoC5/ADC_Battery.c **** * Global Variables:
 825:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_offset variable used.
 826:Generated_Source\PSoC5/ADC_Battery.c **** *  ADC_Battery_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/ADC_Battery.c **** *
 828:Generated_Source\PSoC5/ADC_Battery.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/ADC_Battery.c **** float32 ADC_Battery_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/ADC_Battery.c **** {
 848              		.loc 1 830 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              	.LVL60:
 853 0000 38B5     		push	{r3, r4, r5, lr}
 854              		.cfi_def_cfa_offset 16
 855              		.cfi_offset 3, -16
 856              		.cfi_offset 4, -12
 857              		.cfi_offset 5, -8
 858              		.cfi_offset 14, -4
 831:Generated_Source\PSoC5/ADC_Battery.c ****     float32 volts;
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 32


 832:Generated_Source\PSoC5/ADC_Battery.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/ADC_Battery.c **** 
 834:Generated_Source\PSoC5/ADC_Battery.c ****     if(ADC_Battery_countsPerVolt != 0)
 859              		.loc 1 834 0
 860 0002 0F4B     		ldr	r3, .L86
 861 0004 1B88     		ldrh	r3, [r3]
 862 0006 9BB2     		uxth	r3, r3
 863 0008 33B1     		cbz	r3, .L83
 835:Generated_Source\PSoC5/ADC_Battery.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/ADC_Battery.c ****         countsPer10Volt = (int32)ADC_Battery_countsPerVolt * 10;
 864              		.loc 1 836 0
 865 000a 0D4B     		ldr	r3, .L86
 866 000c 1C88     		ldrh	r4, [r3]
 867 000e 24B2     		sxth	r4, r4
 868 0010 04EB8404 		add	r4, r4, r4, lsl #2
 869 0014 6400     		lsls	r4, r4, #1
 870              	.LVL61:
 871 0016 01E0     		b	.L84
 872              	.LVL62:
 873              	.L83:
 837:Generated_Source\PSoC5/ADC_Battery.c ****     }
 838:Generated_Source\PSoC5/ADC_Battery.c ****     else
 839:Generated_Source\PSoC5/ADC_Battery.c ****     {
 840:Generated_Source\PSoC5/ADC_Battery.c ****         countsPer10Volt = ADC_Battery_countsPer10Volt;
 874              		.loc 1 840 0
 875 0018 0A4B     		ldr	r3, .L86+4
 876 001a 1C68     		ldr	r4, [r3]
 877              	.LVL63:
 878              	.L84:
 841:Generated_Source\PSoC5/ADC_Battery.c ****     }
 842:Generated_Source\PSoC5/ADC_Battery.c **** 
 843:Generated_Source\PSoC5/ADC_Battery.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/ADC_Battery.c ****     adcCounts -= ADC_Battery_offset;
 879              		.loc 1 844 0
 880 001c 0A4B     		ldr	r3, .L86+8
 881 001e 1B88     		ldrh	r3, [r3]
 882 0020 C01A     		subs	r0, r0, r3
 883              	.LVL64:
 845:Generated_Source\PSoC5/ADC_Battery.c **** 
 846:Generated_Source\PSoC5/ADC_Battery.c ****     volts = ((float32)adcCounts * ADC_Battery_10V_COUNTS) / (float32)countsPer10Volt;
 884              		.loc 1 846 0
 885 0022 00B2     		sxth	r0, r0
 886 0024 FFF7FEFF 		bl	__aeabi_i2f
 887              	.LVL65:
 888 0028 0849     		ldr	r1, .L86+12
 889 002a FFF7FEFF 		bl	__aeabi_fmul
 890              	.LVL66:
 891 002e 0546     		mov	r5, r0
 892 0030 2046     		mov	r0, r4
 893 0032 FFF7FEFF 		bl	__aeabi_i2f
 894              	.LVL67:
 895 0036 0146     		mov	r1, r0
 896 0038 2846     		mov	r0, r5
 897 003a FFF7FEFF 		bl	__aeabi_fdiv
 898              	.LVL68:
 847:Generated_Source\PSoC5/ADC_Battery.c **** 
 848:Generated_Source\PSoC5/ADC_Battery.c ****     return( volts );
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 33


 849:Generated_Source\PSoC5/ADC_Battery.c **** }
 899              		.loc 1 849 0
 900 003e 38BD     		pop	{r3, r4, r5, pc}
 901              	.LVL69:
 902              	.L87:
 903              		.align	2
 904              	.L86:
 905 0040 00000000 		.word	ADC_Battery_countsPerVolt
 906 0044 00000000 		.word	ADC_Battery_countsPer10Volt
 907 0048 00000000 		.word	ADC_Battery_offset
 908 004c 00002041 		.word	1092616192
 909              		.cfi_endproc
 910              	.LFE17:
 911              		.size	ADC_Battery_CountsTo_Volts, .-ADC_Battery_CountsTo_Volts
 912              		.comm	ADC_Battery_shift,2,2
 913              		.comm	ADC_Battery_countsPer10Volt,4,4
 914              		.comm	ADC_Battery_countsPerVolt,2,2
 915              		.comm	ADC_Battery_offset,2,2
 916              		.global	ADC_Battery_initVar
 917              		.bss
 918              		.set	.LANCHOR0,. + 0
 919              		.type	ADC_Battery_initVar, %object
 920              		.size	ADC_Battery_initVar, 1
 921              	ADC_Battery_initVar:
 922 0000 00       		.space	1
 923              		.text
 924              	.Letext0:
 925              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 926              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 927              		.file 4 "Generated_Source\\PSoC5\\ADC_Battery_theACLK.h"
 928              		.section	.debug_info,"",%progbits
 929              	.Ldebug_info0:
 930 0000 F4050000 		.4byte	0x5f4
 931 0004 0400     		.2byte	0x4
 932 0006 00000000 		.4byte	.Ldebug_abbrev0
 933 000a 04       		.byte	0x4
 934 000b 01       		.uleb128 0x1
 935 000c F9030000 		.4byte	.LASF65
 936 0010 01       		.byte	0x1
 937 0011 0B030000 		.4byte	.LASF66
 938 0015 2E020000 		.4byte	.LASF67
 939 0019 00000000 		.4byte	.Ldebug_ranges0+0
 940 001d 00000000 		.4byte	0
 941 0021 00000000 		.4byte	.Ldebug_line0
 942 0025 02       		.uleb128 0x2
 943 0026 04       		.byte	0x4
 944 0027 05       		.byte	0x5
 945 0028 696E7400 		.ascii	"int\000"
 946 002c 03       		.uleb128 0x3
 947 002d 04       		.byte	0x4
 948 002e 07       		.byte	0x7
 949 002f 76010000 		.4byte	.LASF0
 950 0033 03       		.uleb128 0x3
 951 0034 01       		.byte	0x1
 952 0035 06       		.byte	0x6
 953 0036 C6000000 		.4byte	.LASF1
 954 003a 03       		.uleb128 0x3
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 34


 955 003b 01       		.byte	0x1
 956 003c 08       		.byte	0x8
 957 003d C1020000 		.4byte	.LASF2
 958 0041 03       		.uleb128 0x3
 959 0042 02       		.byte	0x2
 960 0043 05       		.byte	0x5
 961 0044 CF020000 		.4byte	.LASF3
 962 0048 03       		.uleb128 0x3
 963 0049 02       		.byte	0x2
 964 004a 07       		.byte	0x7
 965 004b D3010000 		.4byte	.LASF4
 966 004f 03       		.uleb128 0x3
 967 0050 04       		.byte	0x4
 968 0051 05       		.byte	0x5
 969 0052 EA000000 		.4byte	.LASF5
 970 0056 03       		.uleb128 0x3
 971 0057 04       		.byte	0x4
 972 0058 07       		.byte	0x7
 973 0059 8A010000 		.4byte	.LASF6
 974 005d 03       		.uleb128 0x3
 975 005e 08       		.byte	0x8
 976 005f 05       		.byte	0x5
 977 0060 B8000000 		.4byte	.LASF7
 978 0064 03       		.uleb128 0x3
 979 0065 08       		.byte	0x8
 980 0066 07       		.byte	0x7
 981 0067 88000000 		.4byte	.LASF8
 982 006b 03       		.uleb128 0x3
 983 006c 04       		.byte	0x4
 984 006d 07       		.byte	0x7
 985 006e 25020000 		.4byte	.LASF9
 986 0072 04       		.uleb128 0x4
 987 0073 04       		.byte	0x4
 988 0074 78000000 		.4byte	0x78
 989 0078 05       		.uleb128 0x5
 990 0079 03       		.uleb128 0x3
 991 007a 01       		.byte	0x1
 992 007b 08       		.byte	0x8
 993 007c 5D030000 		.4byte	.LASF10
 994 0080 06       		.uleb128 0x6
 995 0081 F9000000 		.4byte	.LASF11
 996 0085 02       		.byte	0x2
 997 0086 9201     		.2byte	0x192
 998 0088 3A000000 		.4byte	0x3a
 999 008c 06       		.uleb128 0x6
 1000 008d 00000000 		.4byte	.LASF12
 1001 0091 02       		.byte	0x2
 1002 0092 9301     		.2byte	0x193
 1003 0094 48000000 		.4byte	0x48
 1004 0098 06       		.uleb128 0x6
 1005 0099 10010000 		.4byte	.LASF13
 1006 009d 02       		.byte	0x2
 1007 009e 9401     		.2byte	0x194
 1008 00a0 56000000 		.4byte	0x56
 1009 00a4 06       		.uleb128 0x6
 1010 00a5 E6010000 		.4byte	.LASF14
 1011 00a9 02       		.byte	0x2
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 35


 1012 00aa 9501     		.2byte	0x195
 1013 00ac 33000000 		.4byte	0x33
 1014 00b0 06       		.uleb128 0x6
 1015 00b1 87040000 		.4byte	.LASF15
 1016 00b5 02       		.byte	0x2
 1017 00b6 9601     		.2byte	0x196
 1018 00b8 41000000 		.4byte	0x41
 1019 00bc 06       		.uleb128 0x6
 1020 00bd E4000000 		.4byte	.LASF16
 1021 00c1 02       		.byte	0x2
 1022 00c2 9701     		.2byte	0x197
 1023 00c4 4F000000 		.4byte	0x4f
 1024 00c8 06       		.uleb128 0x6
 1025 00c9 1D020000 		.4byte	.LASF17
 1026 00cd 02       		.byte	0x2
 1027 00ce 9801     		.2byte	0x198
 1028 00d0 D4000000 		.4byte	0xd4
 1029 00d4 03       		.uleb128 0x3
 1030 00d5 04       		.byte	0x4
 1031 00d6 04       		.byte	0x4
 1032 00d7 93020000 		.4byte	.LASF18
 1033 00db 03       		.uleb128 0x3
 1034 00dc 08       		.byte	0x8
 1035 00dd 04       		.byte	0x4
 1036 00de 09010000 		.4byte	.LASF19
 1037 00e2 06       		.uleb128 0x6
 1038 00e3 69020000 		.4byte	.LASF20
 1039 00e7 02       		.byte	0x2
 1040 00e8 9D01     		.2byte	0x19d
 1041 00ea 5D000000 		.4byte	0x5d
 1042 00ee 06       		.uleb128 0x6
 1043 00ef B5020000 		.4byte	.LASF21
 1044 00f3 02       		.byte	0x2
 1045 00f4 3C02     		.2byte	0x23c
 1046 00f6 FA000000 		.4byte	0xfa
 1047 00fa 07       		.uleb128 0x7
 1048 00fb 80000000 		.4byte	0x80
 1049 00ff 06       		.uleb128 0x6
 1050 0100 F3000000 		.4byte	.LASF22
 1051 0104 02       		.byte	0x2
 1052 0105 3D02     		.2byte	0x23d
 1053 0107 0B010000 		.4byte	0x10b
 1054 010b 07       		.uleb128 0x7
 1055 010c 8C000000 		.4byte	0x8c
 1056 0110 06       		.uleb128 0x6
 1057 0111 03020000 		.4byte	.LASF23
 1058 0115 02       		.byte	0x2
 1059 0116 3E02     		.2byte	0x23e
 1060 0118 1C010000 		.4byte	0x11c
 1061 011c 07       		.uleb128 0x7
 1062 011d 98000000 		.4byte	0x98
 1063 0121 06       		.uleb128 0x6
 1064 0122 62030000 		.4byte	.LASF24
 1065 0126 02       		.byte	0x2
 1066 0127 4E02     		.2byte	0x24e
 1067 0129 72000000 		.4byte	0x72
 1068 012d 08       		.uleb128 0x8
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 36


 1069 012e CD040000 		.4byte	.LASF68
 1070 0132 01       		.byte	0x1
 1071 0133 6302     		.2byte	0x263
 1072 0135 00000000 		.4byte	.LFB12
 1073 0139 64000000 		.4byte	.LFE12-.LFB12
 1074 013d 01       		.uleb128 0x1
 1075 013e 9C       		.byte	0x9c
 1076 013f 73010000 		.4byte	0x173
 1077 0143 09       		.uleb128 0x9
 1078 0144 96030000 		.4byte	.LASF31
 1079 0148 01       		.byte	0x1
 1080 0149 6302     		.2byte	0x263
 1081 014b 80000000 		.4byte	0x80
 1082 014f 00000000 		.4byte	.LLST0
 1083 0153 0A       		.uleb128 0xa
 1084 0154 52000000 		.4byte	.LASF25
 1085 0158 01       		.byte	0x1
 1086 0159 6502     		.2byte	0x265
 1087 015b BC000000 		.4byte	0xbc
 1088 015f 3A000000 		.4byte	.LLST1
 1089 0163 0B       		.uleb128 0xb
 1090 0164 22000000 		.4byte	.LVL4
 1091 0168 7C050000 		.4byte	0x57c
 1092 016c 0C       		.uleb128 0xc
 1093 016d 01       		.uleb128 0x1
 1094 016e 50       		.byte	0x50
 1095 016f 01       		.uleb128 0x1
 1096 0170 30       		.byte	0x30
 1097 0171 00       		.byte	0
 1098 0172 00       		.byte	0
 1099 0173 0D       		.uleb128 0xd
 1100 0174 83030000 		.4byte	.LASF28
 1101 0178 01       		.byte	0x1
 1102 0179 8F       		.byte	0x8f
 1103 017a 00000000 		.4byte	.LFB2
 1104 017e 94000000 		.4byte	.LFE2-.LFB2
 1105 0182 01       		.uleb128 0x1
 1106 0183 9C       		.byte	0x9c
 1107 0184 D3010000 		.4byte	0x1d3
 1108 0188 0E       		.uleb128 0xe
 1109 0189 E2040000 		.4byte	.LASF26
 1110 018d 01       		.byte	0x1
 1111 018e 91       		.byte	0x91
 1112 018f 80000000 		.4byte	0x80
 1113 0193 67000000 		.4byte	.LLST2
 1114 0197 0E       		.uleb128 0xe
 1115 0198 C7030000 		.4byte	.LASF27
 1116 019c 01       		.byte	0x1
 1117 019d 92       		.byte	0x92
 1118 019e 80000000 		.4byte	0x80
 1119 01a2 98000000 		.4byte	.LLST3
 1120 01a6 0F       		.uleb128 0xf
 1121 01a7 06000000 		.4byte	.LVL8
 1122 01ab 8D050000 		.4byte	0x58d
 1123 01af 10       		.uleb128 0x10
 1124 01b0 76000000 		.4byte	.LVL14
 1125 01b4 98050000 		.4byte	0x598
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 37


 1126 01b8 C2010000 		.4byte	0x1c2
 1127 01bc 0C       		.uleb128 0xc
 1128 01bd 01       		.uleb128 0x1
 1129 01be 50       		.byte	0x50
 1130 01bf 01       		.uleb128 0x1
 1131 01c0 3A       		.byte	0x3a
 1132 01c1 00       		.byte	0
 1133 01c2 0B       		.uleb128 0xb
 1134 01c3 82000000 		.4byte	.LVL15
 1135 01c7 A9050000 		.4byte	0x5a9
 1136 01cb 0C       		.uleb128 0xc
 1137 01cc 01       		.uleb128 0x1
 1138 01cd 50       		.byte	0x50
 1139 01ce 02       		.uleb128 0x2
 1140 01cf 74       		.byte	0x74
 1141 01d0 00       		.sleb128 0
 1142 01d1 00       		.byte	0
 1143 01d2 00       		.byte	0
 1144 01d3 0D       		.uleb128 0xd
 1145 01d4 41000000 		.4byte	.LASF29
 1146 01d8 01       		.byte	0x1
 1147 01d9 F8       		.byte	0xf8
 1148 01da 00000000 		.4byte	.LFB3
 1149 01de 48000000 		.4byte	.LFE3-.LFB3
 1150 01e2 01       		.uleb128 0x1
 1151 01e3 9C       		.byte	0x9c
 1152 01e4 0A020000 		.4byte	0x20a
 1153 01e8 0E       		.uleb128 0xe
 1154 01e9 C7030000 		.4byte	.LASF27
 1155 01ed 01       		.byte	0x1
 1156 01ee FA       		.byte	0xfa
 1157 01ef 80000000 		.4byte	0x80
 1158 01f3 AB000000 		.4byte	.LLST4
 1159 01f7 0F       		.uleb128 0xf
 1160 01f8 06000000 		.4byte	.LVL17
 1161 01fc 8D050000 		.4byte	0x58d
 1162 0200 0F       		.uleb128 0xf
 1163 0201 40000000 		.4byte	.LVL18
 1164 0205 A9050000 		.4byte	0x5a9
 1165 0209 00       		.byte	0
 1166 020a 11       		.uleb128 0x11
 1167 020b A1030000 		.4byte	.LASF30
 1168 020f 01       		.byte	0x1
 1169 0210 2201     		.2byte	0x122
 1170 0212 00000000 		.4byte	.LFB4
 1171 0216 18000000 		.4byte	.LFE4-.LFB4
 1172 021a 01       		.uleb128 0x1
 1173 021b 9C       		.byte	0x9c
 1174 021c 41020000 		.4byte	0x241
 1175 0220 09       		.uleb128 0x9
 1176 0221 AF020000 		.4byte	.LASF32
 1177 0225 01       		.byte	0x1
 1178 0226 2201     		.2byte	0x122
 1179 0228 80000000 		.4byte	0x80
 1180 022c BE000000 		.4byte	.LLST5
 1181 0230 0A       		.uleb128 0xa
 1182 0231 E2040000 		.4byte	.LASF26
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 38


 1183 0235 01       		.byte	0x1
 1184 0236 2401     		.2byte	0x124
 1185 0238 80000000 		.4byte	0x80
 1186 023c DC000000 		.4byte	.LLST6
 1187 0240 00       		.byte	0
 1188 0241 11       		.uleb128 0x11
 1189 0242 D9020000 		.4byte	.LASF33
 1190 0246 01       		.byte	0x1
 1191 0247 5401     		.2byte	0x154
 1192 0249 00000000 		.4byte	.LFB5
 1193 024d 38000000 		.4byte	.LFE5-.LFB5
 1194 0251 01       		.uleb128 0x1
 1195 0252 9C       		.byte	0x9c
 1196 0253 9B020000 		.4byte	0x29b
 1197 0257 09       		.uleb128 0x9
 1198 0258 96030000 		.4byte	.LASF31
 1199 025c 01       		.byte	0x1
 1200 025d 5401     		.2byte	0x154
 1201 025f 80000000 		.4byte	0x80
 1202 0263 FA000000 		.4byte	.LLST7
 1203 0267 0A       		.uleb128 0xa
 1204 0268 E2040000 		.4byte	.LASF26
 1205 026c 01       		.byte	0x1
 1206 026d 5601     		.2byte	0x156
 1207 026f 80000000 		.4byte	0x80
 1208 0273 34010000 		.4byte	.LLST8
 1209 0277 10       		.uleb128 0x10
 1210 0278 20000000 		.4byte	.LVL27
 1211 027c 7C050000 		.4byte	0x57c
 1212 0280 8A020000 		.4byte	0x28a
 1213 0284 0C       		.uleb128 0xc
 1214 0285 01       		.uleb128 0x1
 1215 0286 50       		.byte	0x50
 1216 0287 01       		.uleb128 0x1
 1217 0288 30       		.byte	0x30
 1218 0289 00       		.byte	0
 1219 028a 0B       		.uleb128 0xb
 1220 028b 30000000 		.4byte	.LVL30
 1221 028f 2D010000 		.4byte	0x12d
 1222 0293 0C       		.uleb128 0xc
 1223 0294 01       		.uleb128 0x1
 1224 0295 50       		.byte	0x50
 1225 0296 02       		.uleb128 0x2
 1226 0297 74       		.byte	0x74
 1227 0298 00       		.sleb128 0
 1228 0299 00       		.byte	0
 1229 029a 00       		.byte	0
 1230 029b 0D       		.uleb128 0xd
 1231 029c EB010000 		.4byte	.LASF34
 1232 02a0 01       		.byte	0x1
 1233 02a1 6A       		.byte	0x6a
 1234 02a2 00000000 		.4byte	.LFB1
 1235 02a6 3C000000 		.4byte	.LFE1-.LFB1
 1236 02aa 01       		.uleb128 0x1
 1237 02ab 9C       		.byte	0x9c
 1238 02ac FE020000 		.4byte	0x2fe
 1239 02b0 10       		.uleb128 0x10
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 39


 1240 02b1 08000000 		.4byte	.LVL31
 1241 02b5 BA050000 		.4byte	0x5ba
 1242 02b9 C3020000 		.4byte	0x2c3
 1243 02bd 0C       		.uleb128 0xc
 1244 02be 01       		.uleb128 0x1
 1245 02bf 50       		.byte	0x50
 1246 02c0 01       		.uleb128 0x1
 1247 02c1 40       		.byte	0x40
 1248 02c2 00       		.byte	0
 1249 02c3 10       		.uleb128 0x10
 1250 02c4 10000000 		.4byte	.LVL32
 1251 02c8 CB050000 		.4byte	0x5cb
 1252 02cc DB020000 		.4byte	0x2db
 1253 02d0 0C       		.uleb128 0xc
 1254 02d1 01       		.uleb128 0x1
 1255 02d2 51       		.byte	0x51
 1256 02d3 01       		.uleb128 0x1
 1257 02d4 37       		.byte	0x37
 1258 02d5 0C       		.uleb128 0xc
 1259 02d6 01       		.uleb128 0x1
 1260 02d7 50       		.byte	0x50
 1261 02d8 01       		.uleb128 0x1
 1262 02d9 30       		.byte	0x30
 1263 02da 00       		.byte	0
 1264 02db 10       		.uleb128 0x10
 1265 02dc 18000000 		.4byte	.LVL33
 1266 02e0 E1050000 		.4byte	0x5e1
 1267 02e4 EE020000 		.4byte	0x2ee
 1268 02e8 0C       		.uleb128 0xc
 1269 02e9 01       		.uleb128 0x1
 1270 02ea 50       		.byte	0x50
 1271 02eb 01       		.uleb128 0x1
 1272 02ec 30       		.byte	0x30
 1273 02ed 00       		.byte	0
 1274 02ee 0B       		.uleb128 0xb
 1275 02ef 28000000 		.4byte	.LVL34
 1276 02f3 41020000 		.4byte	0x241
 1277 02f7 0C       		.uleb128 0xc
 1278 02f8 01       		.uleb128 0x1
 1279 02f9 50       		.byte	0x50
 1280 02fa 01       		.uleb128 0x1
 1281 02fb 3C       		.byte	0x3c
 1282 02fc 00       		.byte	0
 1283 02fd 00       		.byte	0
 1284 02fe 0D       		.uleb128 0xd
 1285 02ff 4B030000 		.4byte	.LASF35
 1286 0303 01       		.byte	0x1
 1287 0304 4A       		.byte	0x4a
 1288 0305 00000000 		.4byte	.LFB0
 1289 0309 1C000000 		.4byte	.LFE0-.LFB0
 1290 030d 01       		.uleb128 0x1
 1291 030e 9C       		.byte	0x9c
 1292 030f 26030000 		.4byte	0x326
 1293 0313 0F       		.uleb128 0xf
 1294 0314 0C000000 		.4byte	.LVL35
 1295 0318 9B020000 		.4byte	0x29b
 1296 031c 0F       		.uleb128 0xf
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 40


 1297 031d 16000000 		.4byte	.LVL36
 1298 0321 73010000 		.4byte	0x173
 1299 0325 00       		.byte	0
 1300 0326 12       		.uleb128 0x12
 1301 0327 9F000000 		.4byte	.LASF36
 1302 032b 01       		.byte	0x1
 1303 032c 9101     		.2byte	0x191
 1304 032e 00000000 		.4byte	.LFB6
 1305 0332 10000000 		.4byte	.LFE6-.LFB6
 1306 0336 01       		.uleb128 0x1
 1307 0337 9C       		.byte	0x9c
 1308 0338 12       		.uleb128 0x12
 1309 0339 70000000 		.4byte	.LASF37
 1310 033d 01       		.byte	0x1
 1311 033e B301     		.2byte	0x1b3
 1312 0340 00000000 		.4byte	.LFB7
 1313 0344 10000000 		.4byte	.LFE7-.LFB7
 1314 0348 01       		.uleb128 0x1
 1315 0349 9C       		.byte	0x9c
 1316 034a 13       		.uleb128 0x13
 1317 034b 36010000 		.4byte	.LASF40
 1318 034f 01       		.byte	0x1
 1319 0350 DB01     		.2byte	0x1db
 1320 0352 80000000 		.4byte	0x80
 1321 0356 00000000 		.4byte	.LFB8
 1322 035a 24000000 		.4byte	.LFE8-.LFB8
 1323 035e 01       		.uleb128 0x1
 1324 035f 9C       		.byte	0x9c
 1325 0360 94030000 		.4byte	0x394
 1326 0364 09       		.uleb128 0x9
 1327 0365 6E010000 		.4byte	.LASF38
 1328 0369 01       		.byte	0x1
 1329 036a DB01     		.2byte	0x1db
 1330 036c 80000000 		.4byte	0x80
 1331 0370 61010000 		.4byte	.LLST9
 1332 0374 0A       		.uleb128 0xa
 1333 0375 F2030000 		.4byte	.LASF39
 1334 0379 01       		.byte	0x1
 1335 037a DD01     		.2byte	0x1dd
 1336 037c 80000000 		.4byte	0x80
 1337 0380 82010000 		.4byte	.LLST10
 1338 0384 0B       		.uleb128 0xb
 1339 0385 18000000 		.4byte	.LVL40
 1340 0389 98050000 		.4byte	0x598
 1341 038d 0C       		.uleb128 0xc
 1342 038e 01       		.uleb128 0x1
 1343 038f 50       		.byte	0x50
 1344 0390 01       		.uleb128 0x1
 1345 0391 31       		.byte	0x31
 1346 0392 00       		.byte	0
 1347 0393 00       		.byte	0
 1348 0394 14       		.uleb128 0x14
 1349 0395 59000000 		.4byte	.LASF69
 1350 0399 01       		.byte	0x1
 1351 039a 0802     		.2byte	0x208
 1352 039c A4000000 		.4byte	0xa4
 1353 03a0 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 41


 1354 03a4 18000000 		.4byte	.LFE9-.LFB9
 1355 03a8 01       		.uleb128 0x1
 1356 03a9 9C       		.byte	0x9c
 1357 03aa 13       		.uleb128 0x13
 1358 03ab F3020000 		.4byte	.LASF41
 1359 03af 01       		.byte	0x1
 1360 03b0 2602     		.2byte	0x226
 1361 03b2 B0000000 		.4byte	0xb0
 1362 03b6 00000000 		.4byte	.LFB10
 1363 03ba 18000000 		.4byte	.LFE10-.LFB10
 1364 03be 01       		.uleb128 0x1
 1365 03bf 9C       		.byte	0x9c
 1366 03c0 D3030000 		.4byte	0x3d3
 1367 03c4 15       		.uleb128 0x15
 1368 03c5 72657300 		.ascii	"res\000"
 1369 03c9 01       		.byte	0x1
 1370 03ca 2802     		.2byte	0x228
 1371 03cc 8C000000 		.4byte	0x8c
 1372 03d0 01       		.uleb128 0x1
 1373 03d1 53       		.byte	0x53
 1374 03d2 00       		.byte	0
 1375 03d3 11       		.uleb128 0x11
 1376 03d4 99020000 		.4byte	.LASF42
 1377 03d8 01       		.byte	0x1
 1378 03d9 4902     		.2byte	0x249
 1379 03db 00000000 		.4byte	.LFB11
 1380 03df 0C000000 		.4byte	.LFE11-.LFB11
 1381 03e3 01       		.uleb128 0x1
 1382 03e4 9C       		.byte	0x9c
 1383 03e5 F8030000 		.4byte	0x3f8
 1384 03e9 16       		.uleb128 0x16
 1385 03ea B6030000 		.4byte	.LASF43
 1386 03ee 01       		.byte	0x1
 1387 03ef 4902     		.2byte	0x249
 1388 03f1 B0000000 		.4byte	0xb0
 1389 03f5 01       		.uleb128 0x1
 1390 03f6 50       		.byte	0x50
 1391 03f7 00       		.byte	0
 1392 03f8 11       		.uleb128 0x11
 1393 03f9 6F030000 		.4byte	.LASF44
 1394 03fd 01       		.byte	0x1
 1395 03fe B402     		.2byte	0x2b4
 1396 0400 00000000 		.4byte	.LFB13
 1397 0404 10000000 		.4byte	.LFE13-.LFB13
 1398 0408 01       		.uleb128 0x1
 1399 0409 9C       		.byte	0x9c
 1400 040a 1F040000 		.4byte	0x41f
 1401 040e 09       		.uleb128 0x9
 1402 040f 23000000 		.4byte	.LASF45
 1403 0413 01       		.byte	0x1
 1404 0414 B402     		.2byte	0x2b4
 1405 0416 B0000000 		.4byte	0xb0
 1406 041a 99010000 		.4byte	.LLST11
 1407 041e 00       		.byte	0
 1408 041f 11       		.uleb128 0x11
 1409 0420 D8030000 		.4byte	.LASF46
 1410 0424 01       		.byte	0x1
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 42


 1411 0425 CF02     		.2byte	0x2cf
 1412 0427 00000000 		.4byte	.LFB14
 1413 042b 0C000000 		.4byte	.LFE14-.LFB14
 1414 042f 01       		.uleb128 0x1
 1415 0430 9C       		.byte	0x9c
 1416 0431 44040000 		.4byte	0x444
 1417 0435 16       		.uleb128 0x16
 1418 0436 23000000 		.4byte	.LASF45
 1419 043a 01       		.byte	0x1
 1420 043b CF02     		.2byte	0x2cf
 1421 043d BC000000 		.4byte	0xbc
 1422 0441 01       		.uleb128 0x1
 1423 0442 50       		.byte	0x50
 1424 0443 00       		.byte	0
 1425 0444 13       		.uleb128 0x13
 1426 0445 07000000 		.4byte	.LASF47
 1427 0449 01       		.byte	0x1
 1428 044a E702     		.2byte	0x2e7
 1429 044c B0000000 		.4byte	0xb0
 1430 0450 00000000 		.4byte	.LFB15
 1431 0454 54000000 		.4byte	.LFE15-.LFB15
 1432 0458 01       		.uleb128 0x1
 1433 0459 9C       		.byte	0x9c
 1434 045a 8D040000 		.4byte	0x48d
 1435 045e 09       		.uleb128 0x9
 1436 045f BD030000 		.4byte	.LASF48
 1437 0463 01       		.byte	0x1
 1438 0464 E702     		.2byte	0x2e7
 1439 0466 B0000000 		.4byte	0xb0
 1440 046a BA010000 		.4byte	.LLST12
 1441 046e 17       		.uleb128 0x17
 1442 046f FC010000 		.4byte	.LASF49
 1443 0473 01       		.byte	0x1
 1444 0474 E902     		.2byte	0x2e9
 1445 0476 B0000000 		.4byte	0xb0
 1446 047a 01       		.uleb128 0x1
 1447 047b 50       		.byte	0x50
 1448 047c 0A       		.uleb128 0xa
 1449 047d 17010000 		.4byte	.LASF50
 1450 0481 01       		.byte	0x1
 1451 0482 EA02     		.2byte	0x2ea
 1452 0484 BC000000 		.4byte	0xbc
 1453 0488 D8010000 		.4byte	.LLST13
 1454 048c 00       		.byte	0
 1455 048d 18       		.uleb128 0x18
 1456 048e 8D040000 		.4byte	.LASF51
 1457 0492 01       		.byte	0x1
 1458 0493 1103     		.2byte	0x311
 1459 0495 BC000000 		.4byte	0xbc
 1460 0499 00000000 		.4byte	.LFB16
 1461 049d 48000000 		.4byte	.LFE16-.LFB16
 1462 04a1 01       		.uleb128 0x1
 1463 04a2 9C       		.byte	0x9c
 1464 04a3 D4040000 		.4byte	0x4d4
 1465 04a7 09       		.uleb128 0x9
 1466 04a8 BD030000 		.4byte	.LASF48
 1467 04ac 01       		.byte	0x1
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 43


 1468 04ad 1103     		.2byte	0x311
 1469 04af B0000000 		.4byte	0xb0
 1470 04b3 F6010000 		.4byte	.LLST14
 1471 04b7 19       		.uleb128 0x19
 1472 04b8 83010000 		.4byte	.LASF70
 1473 04bc 01       		.byte	0x1
 1474 04bd 1403     		.2byte	0x314
 1475 04bf E2000000 		.4byte	0xe2
 1476 04c3 0A       		.uleb128 0xa
 1477 04c4 17010000 		.4byte	.LASF50
 1478 04c8 01       		.byte	0x1
 1479 04c9 1503     		.2byte	0x315
 1480 04cb BC000000 		.4byte	0xbc
 1481 04cf 19020000 		.4byte	.LLST15
 1482 04d3 00       		.byte	0
 1483 04d4 18       		.uleb128 0x18
 1484 04d5 30030000 		.4byte	.LASF52
 1485 04d9 01       		.byte	0x1
 1486 04da 3D03     		.2byte	0x33d
 1487 04dc C8000000 		.4byte	0xc8
 1488 04e0 00000000 		.4byte	.LFB17
 1489 04e4 50000000 		.4byte	.LFE17-.LFB17
 1490 04e8 01       		.uleb128 0x1
 1491 04e9 9C       		.byte	0x9c
 1492 04ea 1D050000 		.4byte	0x51d
 1493 04ee 09       		.uleb128 0x9
 1494 04ef BD030000 		.4byte	.LASF48
 1495 04f3 01       		.byte	0x1
 1496 04f4 3D03     		.2byte	0x33d
 1497 04f6 B0000000 		.4byte	0xb0
 1498 04fa 37020000 		.4byte	.LLST16
 1499 04fe 17       		.uleb128 0x17
 1500 04ff B6010000 		.4byte	.LASF53
 1501 0503 01       		.byte	0x1
 1502 0504 3F03     		.2byte	0x33f
 1503 0506 C8000000 		.4byte	0xc8
 1504 050a 01       		.uleb128 0x1
 1505 050b 50       		.byte	0x50
 1506 050c 0A       		.uleb128 0xa
 1507 050d 17010000 		.4byte	.LASF50
 1508 0511 01       		.byte	0x1
 1509 0512 4003     		.2byte	0x340
 1510 0514 BC000000 		.4byte	0xbc
 1511 0518 55020000 		.4byte	.LLST17
 1512 051c 00       		.byte	0
 1513 051d 1A       		.uleb128 0x1a
 1514 051e 09020000 		.4byte	.LASF54
 1515 0522 01       		.byte	0x1
 1516 0523 23       		.byte	0x23
 1517 0524 80000000 		.4byte	0x80
 1518 0528 05       		.uleb128 0x5
 1519 0529 03       		.byte	0x3
 1520 052a 00000000 		.4byte	ADC_Battery_initVar
 1521 052e 1A       		.uleb128 0x1a
 1522 052f 80020000 		.4byte	.LASF55
 1523 0533 01       		.byte	0x1
 1524 0534 24       		.byte	0x24
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 44


 1525 0535 3F050000 		.4byte	0x53f
 1526 0539 05       		.uleb128 0x5
 1527 053a 03       		.byte	0x3
 1528 053b 00000000 		.4byte	ADC_Battery_offset
 1529 053f 07       		.uleb128 0x7
 1530 0540 B0000000 		.4byte	0xb0
 1531 0544 1A       		.uleb128 0x1a
 1532 0545 9C010000 		.4byte	.LASF56
 1533 0549 01       		.byte	0x1
 1534 054a 25       		.byte	0x25
 1535 054b 3F050000 		.4byte	0x53f
 1536 054f 05       		.uleb128 0x5
 1537 0550 03       		.byte	0x3
 1538 0551 00000000 		.4byte	ADC_Battery_countsPerVolt
 1539 0555 1A       		.uleb128 0x1a
 1540 0556 52010000 		.4byte	.LASF57
 1541 055a 01       		.byte	0x1
 1542 055b 26       		.byte	0x26
 1543 055c 66050000 		.4byte	0x566
 1544 0560 05       		.uleb128 0x5
 1545 0561 03       		.byte	0x3
 1546 0562 00000000 		.4byte	ADC_Battery_countsPer10Volt
 1547 0566 07       		.uleb128 0x7
 1548 0567 BC000000 		.4byte	0xbc
 1549 056b 1A       		.uleb128 0x1a
 1550 056c D2000000 		.4byte	.LASF58
 1551 0570 01       		.byte	0x1
 1552 0571 27       		.byte	0x27
 1553 0572 3F050000 		.4byte	0x53f
 1554 0576 05       		.uleb128 0x5
 1555 0577 03       		.byte	0x3
 1556 0578 00000000 		.4byte	ADC_Battery_shift
 1557 057c 1B       		.uleb128 0x1b
 1558 057d BA020000 		.4byte	.LASF59
 1559 0581 03       		.byte	0x3
 1560 0582 7F       		.byte	0x7f
 1561 0583 8D050000 		.4byte	0x58d
 1562 0587 1C       		.uleb128 0x1c
 1563 0588 80000000 		.4byte	0x80
 1564 058c 00       		.byte	0
 1565 058d 1D       		.uleb128 0x1d
 1566 058e BC010000 		.4byte	.LASF71
 1567 0592 03       		.byte	0x3
 1568 0593 7D       		.byte	0x7d
 1569 0594 80000000 		.4byte	0x80
 1570 0598 1B       		.uleb128 0x1b
 1571 0599 FF000000 		.4byte	.LASF60
 1572 059d 03       		.byte	0x3
 1573 059e 77       		.byte	0x77
 1574 059f A9050000 		.4byte	0x5a9
 1575 05a3 1C       		.uleb128 0x1c
 1576 05a4 8C000000 		.4byte	0x8c
 1577 05a8 00       		.byte	0
 1578 05a9 1B       		.uleb128 0x1b
 1579 05aa 2B000000 		.4byte	.LASF61
 1580 05ae 03       		.byte	0x3
 1581 05af 7E       		.byte	0x7e
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 45


 1582 05b0 BA050000 		.4byte	0x5ba
 1583 05b4 1C       		.uleb128 0x1c
 1584 05b5 80000000 		.4byte	0x80
 1585 05b9 00       		.byte	0
 1586 05ba 1B       		.uleb128 0x1b
 1587 05bb A9040000 		.4byte	.LASF62
 1588 05bf 04       		.byte	0x4
 1589 05c0 32       		.byte	0x32
 1590 05c1 CB050000 		.4byte	0x5cb
 1591 05c5 1C       		.uleb128 0x1c
 1592 05c6 80000000 		.4byte	0x80
 1593 05ca 00       		.byte	0
 1594 05cb 1B       		.uleb128 0x1b
 1595 05cc 6F020000 		.4byte	.LASF63
 1596 05d0 03       		.byte	0x3
 1597 05d1 8B       		.byte	0x8b
 1598 05d2 E1050000 		.4byte	0x5e1
 1599 05d6 1C       		.uleb128 0x1c
 1600 05d7 80000000 		.4byte	0x80
 1601 05db 1C       		.uleb128 0x1c
 1602 05dc 80000000 		.4byte	0x80
 1603 05e0 00       		.byte	0
 1604 05e1 1E       		.uleb128 0x1e
 1605 05e2 27010000 		.4byte	.LASF64
 1606 05e6 03       		.byte	0x3
 1607 05e7 88       		.byte	0x88
 1608 05e8 21010000 		.4byte	0x121
 1609 05ec 1C       		.uleb128 0x1c
 1610 05ed 80000000 		.4byte	0x80
 1611 05f1 1C       		.uleb128 0x1c
 1612 05f2 21010000 		.4byte	0x121
 1613 05f6 00       		.byte	0
 1614 05f7 00       		.byte	0
 1615              		.section	.debug_abbrev,"",%progbits
 1616              	.Ldebug_abbrev0:
 1617 0000 01       		.uleb128 0x1
 1618 0001 11       		.uleb128 0x11
 1619 0002 01       		.byte	0x1
 1620 0003 25       		.uleb128 0x25
 1621 0004 0E       		.uleb128 0xe
 1622 0005 13       		.uleb128 0x13
 1623 0006 0B       		.uleb128 0xb
 1624 0007 03       		.uleb128 0x3
 1625 0008 0E       		.uleb128 0xe
 1626 0009 1B       		.uleb128 0x1b
 1627 000a 0E       		.uleb128 0xe
 1628 000b 55       		.uleb128 0x55
 1629 000c 17       		.uleb128 0x17
 1630 000d 11       		.uleb128 0x11
 1631 000e 01       		.uleb128 0x1
 1632 000f 10       		.uleb128 0x10
 1633 0010 17       		.uleb128 0x17
 1634 0011 00       		.byte	0
 1635 0012 00       		.byte	0
 1636 0013 02       		.uleb128 0x2
 1637 0014 24       		.uleb128 0x24
 1638 0015 00       		.byte	0
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 46


 1639 0016 0B       		.uleb128 0xb
 1640 0017 0B       		.uleb128 0xb
 1641 0018 3E       		.uleb128 0x3e
 1642 0019 0B       		.uleb128 0xb
 1643 001a 03       		.uleb128 0x3
 1644 001b 08       		.uleb128 0x8
 1645 001c 00       		.byte	0
 1646 001d 00       		.byte	0
 1647 001e 03       		.uleb128 0x3
 1648 001f 24       		.uleb128 0x24
 1649 0020 00       		.byte	0
 1650 0021 0B       		.uleb128 0xb
 1651 0022 0B       		.uleb128 0xb
 1652 0023 3E       		.uleb128 0x3e
 1653 0024 0B       		.uleb128 0xb
 1654 0025 03       		.uleb128 0x3
 1655 0026 0E       		.uleb128 0xe
 1656 0027 00       		.byte	0
 1657 0028 00       		.byte	0
 1658 0029 04       		.uleb128 0x4
 1659 002a 0F       		.uleb128 0xf
 1660 002b 00       		.byte	0
 1661 002c 0B       		.uleb128 0xb
 1662 002d 0B       		.uleb128 0xb
 1663 002e 49       		.uleb128 0x49
 1664 002f 13       		.uleb128 0x13
 1665 0030 00       		.byte	0
 1666 0031 00       		.byte	0
 1667 0032 05       		.uleb128 0x5
 1668 0033 15       		.uleb128 0x15
 1669 0034 00       		.byte	0
 1670 0035 27       		.uleb128 0x27
 1671 0036 19       		.uleb128 0x19
 1672 0037 00       		.byte	0
 1673 0038 00       		.byte	0
 1674 0039 06       		.uleb128 0x6
 1675 003a 16       		.uleb128 0x16
 1676 003b 00       		.byte	0
 1677 003c 03       		.uleb128 0x3
 1678 003d 0E       		.uleb128 0xe
 1679 003e 3A       		.uleb128 0x3a
 1680 003f 0B       		.uleb128 0xb
 1681 0040 3B       		.uleb128 0x3b
 1682 0041 05       		.uleb128 0x5
 1683 0042 49       		.uleb128 0x49
 1684 0043 13       		.uleb128 0x13
 1685 0044 00       		.byte	0
 1686 0045 00       		.byte	0
 1687 0046 07       		.uleb128 0x7
 1688 0047 35       		.uleb128 0x35
 1689 0048 00       		.byte	0
 1690 0049 49       		.uleb128 0x49
 1691 004a 13       		.uleb128 0x13
 1692 004b 00       		.byte	0
 1693 004c 00       		.byte	0
 1694 004d 08       		.uleb128 0x8
 1695 004e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 47


 1696 004f 01       		.byte	0x1
 1697 0050 03       		.uleb128 0x3
 1698 0051 0E       		.uleb128 0xe
 1699 0052 3A       		.uleb128 0x3a
 1700 0053 0B       		.uleb128 0xb
 1701 0054 3B       		.uleb128 0x3b
 1702 0055 05       		.uleb128 0x5
 1703 0056 27       		.uleb128 0x27
 1704 0057 19       		.uleb128 0x19
 1705 0058 11       		.uleb128 0x11
 1706 0059 01       		.uleb128 0x1
 1707 005a 12       		.uleb128 0x12
 1708 005b 06       		.uleb128 0x6
 1709 005c 40       		.uleb128 0x40
 1710 005d 18       		.uleb128 0x18
 1711 005e 9742     		.uleb128 0x2117
 1712 0060 19       		.uleb128 0x19
 1713 0061 01       		.uleb128 0x1
 1714 0062 13       		.uleb128 0x13
 1715 0063 00       		.byte	0
 1716 0064 00       		.byte	0
 1717 0065 09       		.uleb128 0x9
 1718 0066 05       		.uleb128 0x5
 1719 0067 00       		.byte	0
 1720 0068 03       		.uleb128 0x3
 1721 0069 0E       		.uleb128 0xe
 1722 006a 3A       		.uleb128 0x3a
 1723 006b 0B       		.uleb128 0xb
 1724 006c 3B       		.uleb128 0x3b
 1725 006d 05       		.uleb128 0x5
 1726 006e 49       		.uleb128 0x49
 1727 006f 13       		.uleb128 0x13
 1728 0070 02       		.uleb128 0x2
 1729 0071 17       		.uleb128 0x17
 1730 0072 00       		.byte	0
 1731 0073 00       		.byte	0
 1732 0074 0A       		.uleb128 0xa
 1733 0075 34       		.uleb128 0x34
 1734 0076 00       		.byte	0
 1735 0077 03       		.uleb128 0x3
 1736 0078 0E       		.uleb128 0xe
 1737 0079 3A       		.uleb128 0x3a
 1738 007a 0B       		.uleb128 0xb
 1739 007b 3B       		.uleb128 0x3b
 1740 007c 05       		.uleb128 0x5
 1741 007d 49       		.uleb128 0x49
 1742 007e 13       		.uleb128 0x13
 1743 007f 02       		.uleb128 0x2
 1744 0080 17       		.uleb128 0x17
 1745 0081 00       		.byte	0
 1746 0082 00       		.byte	0
 1747 0083 0B       		.uleb128 0xb
 1748 0084 898201   		.uleb128 0x4109
 1749 0087 01       		.byte	0x1
 1750 0088 11       		.uleb128 0x11
 1751 0089 01       		.uleb128 0x1
 1752 008a 31       		.uleb128 0x31
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 48


 1753 008b 13       		.uleb128 0x13
 1754 008c 00       		.byte	0
 1755 008d 00       		.byte	0
 1756 008e 0C       		.uleb128 0xc
 1757 008f 8A8201   		.uleb128 0x410a
 1758 0092 00       		.byte	0
 1759 0093 02       		.uleb128 0x2
 1760 0094 18       		.uleb128 0x18
 1761 0095 9142     		.uleb128 0x2111
 1762 0097 18       		.uleb128 0x18
 1763 0098 00       		.byte	0
 1764 0099 00       		.byte	0
 1765 009a 0D       		.uleb128 0xd
 1766 009b 2E       		.uleb128 0x2e
 1767 009c 01       		.byte	0x1
 1768 009d 3F       		.uleb128 0x3f
 1769 009e 19       		.uleb128 0x19
 1770 009f 03       		.uleb128 0x3
 1771 00a0 0E       		.uleb128 0xe
 1772 00a1 3A       		.uleb128 0x3a
 1773 00a2 0B       		.uleb128 0xb
 1774 00a3 3B       		.uleb128 0x3b
 1775 00a4 0B       		.uleb128 0xb
 1776 00a5 27       		.uleb128 0x27
 1777 00a6 19       		.uleb128 0x19
 1778 00a7 11       		.uleb128 0x11
 1779 00a8 01       		.uleb128 0x1
 1780 00a9 12       		.uleb128 0x12
 1781 00aa 06       		.uleb128 0x6
 1782 00ab 40       		.uleb128 0x40
 1783 00ac 18       		.uleb128 0x18
 1784 00ad 9742     		.uleb128 0x2117
 1785 00af 19       		.uleb128 0x19
 1786 00b0 01       		.uleb128 0x1
 1787 00b1 13       		.uleb128 0x13
 1788 00b2 00       		.byte	0
 1789 00b3 00       		.byte	0
 1790 00b4 0E       		.uleb128 0xe
 1791 00b5 34       		.uleb128 0x34
 1792 00b6 00       		.byte	0
 1793 00b7 03       		.uleb128 0x3
 1794 00b8 0E       		.uleb128 0xe
 1795 00b9 3A       		.uleb128 0x3a
 1796 00ba 0B       		.uleb128 0xb
 1797 00bb 3B       		.uleb128 0x3b
 1798 00bc 0B       		.uleb128 0xb
 1799 00bd 49       		.uleb128 0x49
 1800 00be 13       		.uleb128 0x13
 1801 00bf 02       		.uleb128 0x2
 1802 00c0 17       		.uleb128 0x17
 1803 00c1 00       		.byte	0
 1804 00c2 00       		.byte	0
 1805 00c3 0F       		.uleb128 0xf
 1806 00c4 898201   		.uleb128 0x4109
 1807 00c7 00       		.byte	0
 1808 00c8 11       		.uleb128 0x11
 1809 00c9 01       		.uleb128 0x1
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 49


 1810 00ca 31       		.uleb128 0x31
 1811 00cb 13       		.uleb128 0x13
 1812 00cc 00       		.byte	0
 1813 00cd 00       		.byte	0
 1814 00ce 10       		.uleb128 0x10
 1815 00cf 898201   		.uleb128 0x4109
 1816 00d2 01       		.byte	0x1
 1817 00d3 11       		.uleb128 0x11
 1818 00d4 01       		.uleb128 0x1
 1819 00d5 31       		.uleb128 0x31
 1820 00d6 13       		.uleb128 0x13
 1821 00d7 01       		.uleb128 0x1
 1822 00d8 13       		.uleb128 0x13
 1823 00d9 00       		.byte	0
 1824 00da 00       		.byte	0
 1825 00db 11       		.uleb128 0x11
 1826 00dc 2E       		.uleb128 0x2e
 1827 00dd 01       		.byte	0x1
 1828 00de 3F       		.uleb128 0x3f
 1829 00df 19       		.uleb128 0x19
 1830 00e0 03       		.uleb128 0x3
 1831 00e1 0E       		.uleb128 0xe
 1832 00e2 3A       		.uleb128 0x3a
 1833 00e3 0B       		.uleb128 0xb
 1834 00e4 3B       		.uleb128 0x3b
 1835 00e5 05       		.uleb128 0x5
 1836 00e6 27       		.uleb128 0x27
 1837 00e7 19       		.uleb128 0x19
 1838 00e8 11       		.uleb128 0x11
 1839 00e9 01       		.uleb128 0x1
 1840 00ea 12       		.uleb128 0x12
 1841 00eb 06       		.uleb128 0x6
 1842 00ec 40       		.uleb128 0x40
 1843 00ed 18       		.uleb128 0x18
 1844 00ee 9742     		.uleb128 0x2117
 1845 00f0 19       		.uleb128 0x19
 1846 00f1 01       		.uleb128 0x1
 1847 00f2 13       		.uleb128 0x13
 1848 00f3 00       		.byte	0
 1849 00f4 00       		.byte	0
 1850 00f5 12       		.uleb128 0x12
 1851 00f6 2E       		.uleb128 0x2e
 1852 00f7 00       		.byte	0
 1853 00f8 3F       		.uleb128 0x3f
 1854 00f9 19       		.uleb128 0x19
 1855 00fa 03       		.uleb128 0x3
 1856 00fb 0E       		.uleb128 0xe
 1857 00fc 3A       		.uleb128 0x3a
 1858 00fd 0B       		.uleb128 0xb
 1859 00fe 3B       		.uleb128 0x3b
 1860 00ff 05       		.uleb128 0x5
 1861 0100 27       		.uleb128 0x27
 1862 0101 19       		.uleb128 0x19
 1863 0102 11       		.uleb128 0x11
 1864 0103 01       		.uleb128 0x1
 1865 0104 12       		.uleb128 0x12
 1866 0105 06       		.uleb128 0x6
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 50


 1867 0106 40       		.uleb128 0x40
 1868 0107 18       		.uleb128 0x18
 1869 0108 9742     		.uleb128 0x2117
 1870 010a 19       		.uleb128 0x19
 1871 010b 00       		.byte	0
 1872 010c 00       		.byte	0
 1873 010d 13       		.uleb128 0x13
 1874 010e 2E       		.uleb128 0x2e
 1875 010f 01       		.byte	0x1
 1876 0110 3F       		.uleb128 0x3f
 1877 0111 19       		.uleb128 0x19
 1878 0112 03       		.uleb128 0x3
 1879 0113 0E       		.uleb128 0xe
 1880 0114 3A       		.uleb128 0x3a
 1881 0115 0B       		.uleb128 0xb
 1882 0116 3B       		.uleb128 0x3b
 1883 0117 05       		.uleb128 0x5
 1884 0118 27       		.uleb128 0x27
 1885 0119 19       		.uleb128 0x19
 1886 011a 49       		.uleb128 0x49
 1887 011b 13       		.uleb128 0x13
 1888 011c 11       		.uleb128 0x11
 1889 011d 01       		.uleb128 0x1
 1890 011e 12       		.uleb128 0x12
 1891 011f 06       		.uleb128 0x6
 1892 0120 40       		.uleb128 0x40
 1893 0121 18       		.uleb128 0x18
 1894 0122 9742     		.uleb128 0x2117
 1895 0124 19       		.uleb128 0x19
 1896 0125 01       		.uleb128 0x1
 1897 0126 13       		.uleb128 0x13
 1898 0127 00       		.byte	0
 1899 0128 00       		.byte	0
 1900 0129 14       		.uleb128 0x14
 1901 012a 2E       		.uleb128 0x2e
 1902 012b 00       		.byte	0
 1903 012c 3F       		.uleb128 0x3f
 1904 012d 19       		.uleb128 0x19
 1905 012e 03       		.uleb128 0x3
 1906 012f 0E       		.uleb128 0xe
 1907 0130 3A       		.uleb128 0x3a
 1908 0131 0B       		.uleb128 0xb
 1909 0132 3B       		.uleb128 0x3b
 1910 0133 05       		.uleb128 0x5
 1911 0134 27       		.uleb128 0x27
 1912 0135 19       		.uleb128 0x19
 1913 0136 49       		.uleb128 0x49
 1914 0137 13       		.uleb128 0x13
 1915 0138 11       		.uleb128 0x11
 1916 0139 01       		.uleb128 0x1
 1917 013a 12       		.uleb128 0x12
 1918 013b 06       		.uleb128 0x6
 1919 013c 40       		.uleb128 0x40
 1920 013d 18       		.uleb128 0x18
 1921 013e 9742     		.uleb128 0x2117
 1922 0140 19       		.uleb128 0x19
 1923 0141 00       		.byte	0
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 51


 1924 0142 00       		.byte	0
 1925 0143 15       		.uleb128 0x15
 1926 0144 34       		.uleb128 0x34
 1927 0145 00       		.byte	0
 1928 0146 03       		.uleb128 0x3
 1929 0147 08       		.uleb128 0x8
 1930 0148 3A       		.uleb128 0x3a
 1931 0149 0B       		.uleb128 0xb
 1932 014a 3B       		.uleb128 0x3b
 1933 014b 05       		.uleb128 0x5
 1934 014c 49       		.uleb128 0x49
 1935 014d 13       		.uleb128 0x13
 1936 014e 02       		.uleb128 0x2
 1937 014f 18       		.uleb128 0x18
 1938 0150 00       		.byte	0
 1939 0151 00       		.byte	0
 1940 0152 16       		.uleb128 0x16
 1941 0153 05       		.uleb128 0x5
 1942 0154 00       		.byte	0
 1943 0155 03       		.uleb128 0x3
 1944 0156 0E       		.uleb128 0xe
 1945 0157 3A       		.uleb128 0x3a
 1946 0158 0B       		.uleb128 0xb
 1947 0159 3B       		.uleb128 0x3b
 1948 015a 05       		.uleb128 0x5
 1949 015b 49       		.uleb128 0x49
 1950 015c 13       		.uleb128 0x13
 1951 015d 02       		.uleb128 0x2
 1952 015e 18       		.uleb128 0x18
 1953 015f 00       		.byte	0
 1954 0160 00       		.byte	0
 1955 0161 17       		.uleb128 0x17
 1956 0162 34       		.uleb128 0x34
 1957 0163 00       		.byte	0
 1958 0164 03       		.uleb128 0x3
 1959 0165 0E       		.uleb128 0xe
 1960 0166 3A       		.uleb128 0x3a
 1961 0167 0B       		.uleb128 0xb
 1962 0168 3B       		.uleb128 0x3b
 1963 0169 05       		.uleb128 0x5
 1964 016a 49       		.uleb128 0x49
 1965 016b 13       		.uleb128 0x13
 1966 016c 02       		.uleb128 0x2
 1967 016d 18       		.uleb128 0x18
 1968 016e 00       		.byte	0
 1969 016f 00       		.byte	0
 1970 0170 18       		.uleb128 0x18
 1971 0171 2E       		.uleb128 0x2e
 1972 0172 01       		.byte	0x1
 1973 0173 3F       		.uleb128 0x3f
 1974 0174 19       		.uleb128 0x19
 1975 0175 03       		.uleb128 0x3
 1976 0176 0E       		.uleb128 0xe
 1977 0177 3A       		.uleb128 0x3a
 1978 0178 0B       		.uleb128 0xb
 1979 0179 3B       		.uleb128 0x3b
 1980 017a 05       		.uleb128 0x5
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 52


 1981 017b 27       		.uleb128 0x27
 1982 017c 19       		.uleb128 0x19
 1983 017d 49       		.uleb128 0x49
 1984 017e 13       		.uleb128 0x13
 1985 017f 11       		.uleb128 0x11
 1986 0180 01       		.uleb128 0x1
 1987 0181 12       		.uleb128 0x12
 1988 0182 06       		.uleb128 0x6
 1989 0183 40       		.uleb128 0x40
 1990 0184 18       		.uleb128 0x18
 1991 0185 9642     		.uleb128 0x2116
 1992 0187 19       		.uleb128 0x19
 1993 0188 01       		.uleb128 0x1
 1994 0189 13       		.uleb128 0x13
 1995 018a 00       		.byte	0
 1996 018b 00       		.byte	0
 1997 018c 19       		.uleb128 0x19
 1998 018d 34       		.uleb128 0x34
 1999 018e 00       		.byte	0
 2000 018f 03       		.uleb128 0x3
 2001 0190 0E       		.uleb128 0xe
 2002 0191 3A       		.uleb128 0x3a
 2003 0192 0B       		.uleb128 0xb
 2004 0193 3B       		.uleb128 0x3b
 2005 0194 05       		.uleb128 0x5
 2006 0195 49       		.uleb128 0x49
 2007 0196 13       		.uleb128 0x13
 2008 0197 00       		.byte	0
 2009 0198 00       		.byte	0
 2010 0199 1A       		.uleb128 0x1a
 2011 019a 34       		.uleb128 0x34
 2012 019b 00       		.byte	0
 2013 019c 03       		.uleb128 0x3
 2014 019d 0E       		.uleb128 0xe
 2015 019e 3A       		.uleb128 0x3a
 2016 019f 0B       		.uleb128 0xb
 2017 01a0 3B       		.uleb128 0x3b
 2018 01a1 0B       		.uleb128 0xb
 2019 01a2 49       		.uleb128 0x49
 2020 01a3 13       		.uleb128 0x13
 2021 01a4 3F       		.uleb128 0x3f
 2022 01a5 19       		.uleb128 0x19
 2023 01a6 02       		.uleb128 0x2
 2024 01a7 18       		.uleb128 0x18
 2025 01a8 00       		.byte	0
 2026 01a9 00       		.byte	0
 2027 01aa 1B       		.uleb128 0x1b
 2028 01ab 2E       		.uleb128 0x2e
 2029 01ac 01       		.byte	0x1
 2030 01ad 3F       		.uleb128 0x3f
 2031 01ae 19       		.uleb128 0x19
 2032 01af 03       		.uleb128 0x3
 2033 01b0 0E       		.uleb128 0xe
 2034 01b1 3A       		.uleb128 0x3a
 2035 01b2 0B       		.uleb128 0xb
 2036 01b3 3B       		.uleb128 0x3b
 2037 01b4 0B       		.uleb128 0xb
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 53


 2038 01b5 27       		.uleb128 0x27
 2039 01b6 19       		.uleb128 0x19
 2040 01b7 3C       		.uleb128 0x3c
 2041 01b8 19       		.uleb128 0x19
 2042 01b9 01       		.uleb128 0x1
 2043 01ba 13       		.uleb128 0x13
 2044 01bb 00       		.byte	0
 2045 01bc 00       		.byte	0
 2046 01bd 1C       		.uleb128 0x1c
 2047 01be 05       		.uleb128 0x5
 2048 01bf 00       		.byte	0
 2049 01c0 49       		.uleb128 0x49
 2050 01c1 13       		.uleb128 0x13
 2051 01c2 00       		.byte	0
 2052 01c3 00       		.byte	0
 2053 01c4 1D       		.uleb128 0x1d
 2054 01c5 2E       		.uleb128 0x2e
 2055 01c6 00       		.byte	0
 2056 01c7 3F       		.uleb128 0x3f
 2057 01c8 19       		.uleb128 0x19
 2058 01c9 03       		.uleb128 0x3
 2059 01ca 0E       		.uleb128 0xe
 2060 01cb 3A       		.uleb128 0x3a
 2061 01cc 0B       		.uleb128 0xb
 2062 01cd 3B       		.uleb128 0x3b
 2063 01ce 0B       		.uleb128 0xb
 2064 01cf 27       		.uleb128 0x27
 2065 01d0 19       		.uleb128 0x19
 2066 01d1 49       		.uleb128 0x49
 2067 01d2 13       		.uleb128 0x13
 2068 01d3 3C       		.uleb128 0x3c
 2069 01d4 19       		.uleb128 0x19
 2070 01d5 00       		.byte	0
 2071 01d6 00       		.byte	0
 2072 01d7 1E       		.uleb128 0x1e
 2073 01d8 2E       		.uleb128 0x2e
 2074 01d9 01       		.byte	0x1
 2075 01da 3F       		.uleb128 0x3f
 2076 01db 19       		.uleb128 0x19
 2077 01dc 03       		.uleb128 0x3
 2078 01dd 0E       		.uleb128 0xe
 2079 01de 3A       		.uleb128 0x3a
 2080 01df 0B       		.uleb128 0xb
 2081 01e0 3B       		.uleb128 0x3b
 2082 01e1 0B       		.uleb128 0xb
 2083 01e2 27       		.uleb128 0x27
 2084 01e3 19       		.uleb128 0x19
 2085 01e4 49       		.uleb128 0x49
 2086 01e5 13       		.uleb128 0x13
 2087 01e6 3C       		.uleb128 0x3c
 2088 01e7 19       		.uleb128 0x19
 2089 01e8 00       		.byte	0
 2090 01e9 00       		.byte	0
 2091 01ea 00       		.byte	0
 2092              		.section	.debug_loc,"",%progbits
 2093              	.Ldebug_loc0:
 2094              	.LLST0:
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 54


 2095 0000 00000000 		.4byte	.LVL0
 2096 0004 1E000000 		.4byte	.LVL3
 2097 0008 0100     		.2byte	0x1
 2098 000a 50       		.byte	0x50
 2099 000b 1E000000 		.4byte	.LVL3
 2100 000f 26000000 		.4byte	.LVL5
 2101 0013 0400     		.2byte	0x4
 2102 0015 F3       		.byte	0xf3
 2103 0016 01       		.uleb128 0x1
 2104 0017 50       		.byte	0x50
 2105 0018 9F       		.byte	0x9f
 2106 0019 26000000 		.4byte	.LVL5
 2107 001d 2A000000 		.4byte	.LVL6
 2108 0021 0100     		.2byte	0x1
 2109 0023 50       		.byte	0x50
 2110 0024 2A000000 		.4byte	.LVL6
 2111 0028 64000000 		.4byte	.LFE12
 2112 002c 0400     		.2byte	0x4
 2113 002e F3       		.byte	0xf3
 2114 002f 01       		.uleb128 0x1
 2115 0030 50       		.byte	0x50
 2116 0031 9F       		.byte	0x9f
 2117 0032 00000000 		.4byte	0
 2118 0036 00000000 		.4byte	0
 2119              	.LLST1:
 2120 003a 16000000 		.4byte	.LVL1
 2121 003e 1C000000 		.4byte	.LVL2
 2122 0042 0400     		.2byte	0x4
 2123 0044 0A       		.byte	0xa
 2124 0045 0001     		.2byte	0x100
 2125 0047 9F       		.byte	0x9f
 2126 0048 1C000000 		.4byte	.LVL2
 2127 004c 26000000 		.4byte	.LVL5
 2128 0050 0200     		.2byte	0x2
 2129 0052 30       		.byte	0x30
 2130 0053 9F       		.byte	0x9f
 2131 0054 2A000000 		.4byte	.LVL6
 2132 0058 3E000000 		.4byte	.LVL7
 2133 005c 0100     		.2byte	0x1
 2134 005e 52       		.byte	0x52
 2135 005f 00000000 		.4byte	0
 2136 0063 00000000 		.4byte	0
 2137              	.LLST2:
 2138 0067 38000000 		.4byte	.LVL10
 2139 006b 3C000000 		.4byte	.LVL11
 2140 006f 0500     		.2byte	0x5
 2141 0071 73       		.byte	0x73
 2142 0072 00       		.sleb128 0
 2143 0073 32       		.byte	0x32
 2144 0074 21       		.byte	0x21
 2145 0075 9F       		.byte	0x9f
 2146 0076 3C000000 		.4byte	.LVL11
 2147 007a 42000000 		.4byte	.LVL12
 2148 007e 0100     		.2byte	0x1
 2149 0080 53       		.byte	0x53
 2150 0081 42000000 		.4byte	.LVL12
 2151 0085 44000000 		.4byte	.LVL13
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 55


 2152 0089 0500     		.2byte	0x5
 2153 008b 0C       		.byte	0xc
 2154 008c 0B590040 		.4byte	0x4000590b
 2155 0090 00000000 		.4byte	0
 2156 0094 00000000 		.4byte	0
 2157              	.LLST3:
 2158 0098 08000000 		.4byte	.LVL9
 2159 009c 84000000 		.4byte	.LVL16
 2160 00a0 0100     		.2byte	0x1
 2161 00a2 54       		.byte	0x54
 2162 00a3 00000000 		.4byte	0
 2163 00a7 00000000 		.4byte	0
 2164              	.LLST4:
 2165 00ab 06000000 		.4byte	.LVL17
 2166 00af 3F000000 		.4byte	.LVL18-1
 2167 00b3 0100     		.2byte	0x1
 2168 00b5 50       		.byte	0x50
 2169 00b6 00000000 		.4byte	0
 2170 00ba 00000000 		.4byte	0
 2171              	.LLST5:
 2172 00be 00000000 		.4byte	.LVL19
 2173 00c2 04000000 		.4byte	.LVL20
 2174 00c6 0100     		.2byte	0x1
 2175 00c8 50       		.byte	0x50
 2176 00c9 04000000 		.4byte	.LVL20
 2177 00cd 10000000 		.4byte	.LVL22
 2178 00d1 0100     		.2byte	0x1
 2179 00d3 50       		.byte	0x50
 2180 00d4 00000000 		.4byte	0
 2181 00d8 00000000 		.4byte	0
 2182              	.LLST6:
 2183 00dc 0C000000 		.4byte	.LVL21
 2184 00e0 10000000 		.4byte	.LVL22
 2185 00e4 0100     		.2byte	0x1
 2186 00e6 53       		.byte	0x53
 2187 00e7 10000000 		.4byte	.LVL22
 2188 00eb 18000000 		.4byte	.LFE4
 2189 00ef 0100     		.2byte	0x1
 2190 00f1 50       		.byte	0x50
 2191 00f2 00000000 		.4byte	0
 2192 00f6 00000000 		.4byte	0
 2193              	.LLST7:
 2194 00fa 00000000 		.4byte	.LVL23
 2195 00fe 1C000000 		.4byte	.LVL26
 2196 0102 0100     		.2byte	0x1
 2197 0104 50       		.byte	0x50
 2198 0105 1C000000 		.4byte	.LVL26
 2199 0109 24000000 		.4byte	.LVL28
 2200 010d 0400     		.2byte	0x4
 2201 010f F3       		.byte	0xf3
 2202 0110 01       		.uleb128 0x1
 2203 0111 50       		.byte	0x50
 2204 0112 9F       		.byte	0x9f
 2205 0113 24000000 		.4byte	.LVL28
 2206 0117 26000000 		.4byte	.LVL29
 2207 011b 0100     		.2byte	0x1
 2208 011d 50       		.byte	0x50
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 56


 2209 011e 26000000 		.4byte	.LVL29
 2210 0122 38000000 		.4byte	.LFE5
 2211 0126 0400     		.2byte	0x4
 2212 0128 F3       		.byte	0xf3
 2213 0129 01       		.uleb128 0x1
 2214 012a 50       		.byte	0x50
 2215 012b 9F       		.byte	0x9f
 2216 012c 00000000 		.4byte	0
 2217 0130 00000000 		.4byte	0
 2218              	.LLST8:
 2219 0134 16000000 		.4byte	.LVL24
 2220 0138 1A000000 		.4byte	.LVL25
 2221 013c 0300     		.2byte	0x3
 2222 013e 08       		.byte	0x8
 2223 013f 44       		.byte	0x44
 2224 0140 9F       		.byte	0x9f
 2225 0141 1A000000 		.4byte	.LVL25
 2226 0145 24000000 		.4byte	.LVL28
 2227 0149 0300     		.2byte	0x3
 2228 014b 09       		.byte	0x9
 2229 014c C4       		.byte	0xc4
 2230 014d 9F       		.byte	0x9f
 2231 014e 26000000 		.4byte	.LVL29
 2232 0152 2F000000 		.4byte	.LVL30-1
 2233 0156 0100     		.2byte	0x1
 2234 0158 52       		.byte	0x52
 2235 0159 00000000 		.4byte	0
 2236 015d 00000000 		.4byte	0
 2237              	.LLST9:
 2238 0161 00000000 		.4byte	.LVL37
 2239 0165 14000000 		.4byte	.LVL39
 2240 0169 0100     		.2byte	0x1
 2241 016b 50       		.byte	0x50
 2242 016c 14000000 		.4byte	.LVL39
 2243 0170 24000000 		.4byte	.LFE8
 2244 0174 0400     		.2byte	0x4
 2245 0176 F3       		.byte	0xf3
 2246 0177 01       		.uleb128 0x1
 2247 0178 50       		.byte	0x50
 2248 0179 9F       		.byte	0x9f
 2249 017a 00000000 		.4byte	0
 2250 017e 00000000 		.4byte	0
 2251              	.LLST10:
 2252 0182 06000000 		.4byte	.LVL38
 2253 0186 17000000 		.4byte	.LVL40-1
 2254 018a 0500     		.2byte	0x5
 2255 018c 73       		.byte	0x73
 2256 018d 00       		.sleb128 0
 2257 018e 31       		.byte	0x31
 2258 018f 1A       		.byte	0x1a
 2259 0190 9F       		.byte	0x9f
 2260 0191 00000000 		.4byte	0
 2261 0195 00000000 		.4byte	0
 2262              	.LLST11:
 2263 0199 00000000 		.4byte	.LVL43
 2264 019d 04000000 		.4byte	.LVL44
 2265 01a1 0100     		.2byte	0x1
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 57


 2266 01a3 50       		.byte	0x50
 2267 01a4 04000000 		.4byte	.LVL44
 2268 01a8 10000000 		.4byte	.LFE13
 2269 01ac 0400     		.2byte	0x4
 2270 01ae F3       		.byte	0xf3
 2271 01af 01       		.uleb128 0x1
 2272 01b0 50       		.byte	0x50
 2273 01b1 9F       		.byte	0x9f
 2274 01b2 00000000 		.4byte	0
 2275 01b6 00000000 		.4byte	0
 2276              	.LLST12:
 2277 01ba 00000000 		.4byte	.LVL46
 2278 01be 22000000 		.4byte	.LVL50
 2279 01c2 0100     		.2byte	0x1
 2280 01c4 50       		.byte	0x50
 2281 01c5 22000000 		.4byte	.LVL50
 2282 01c9 3A000000 		.4byte	.LVL51
 2283 01cd 0100     		.2byte	0x1
 2284 01cf 52       		.byte	0x52
 2285 01d0 00000000 		.4byte	0
 2286 01d4 00000000 		.4byte	0
 2287              	.LLST13:
 2288 01d8 14000000 		.4byte	.LVL47
 2289 01dc 16000000 		.4byte	.LVL48
 2290 01e0 0100     		.2byte	0x1
 2291 01e2 51       		.byte	0x51
 2292 01e3 1A000000 		.4byte	.LVL49
 2293 01e7 54000000 		.4byte	.LFE15
 2294 01eb 0100     		.2byte	0x1
 2295 01ed 51       		.byte	0x51
 2296 01ee 00000000 		.4byte	0
 2297 01f2 00000000 		.4byte	0
 2298              	.LLST14:
 2299 01f6 00000000 		.4byte	.LVL53
 2300 01fa 20000000 		.4byte	.LVL57
 2301 01fe 0100     		.2byte	0x1
 2302 0200 50       		.byte	0x50
 2303 0201 20000000 		.4byte	.LVL57
 2304 0205 22000000 		.4byte	.LVL58
 2305 0209 0600     		.2byte	0x6
 2306 020b 70       		.byte	0x70
 2307 020c 00       		.sleb128 0
 2308 020d 74       		.byte	0x74
 2309 020e 00       		.sleb128 0
 2310 020f 1C       		.byte	0x1c
 2311 0210 9F       		.byte	0x9f
 2312 0211 00000000 		.4byte	0
 2313 0215 00000000 		.4byte	0
 2314              	.LLST15:
 2315 0219 16000000 		.4byte	.LVL54
 2316 021d 18000000 		.4byte	.LVL55
 2317 0221 0100     		.2byte	0x1
 2318 0223 52       		.byte	0x52
 2319 0224 1C000000 		.4byte	.LVL56
 2320 0228 35000000 		.4byte	.LVL59-1
 2321 022c 0100     		.2byte	0x1
 2322 022e 52       		.byte	0x52
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 58


 2323 022f 00000000 		.4byte	0
 2324 0233 00000000 		.4byte	0
 2325              	.LLST16:
 2326 0237 00000000 		.4byte	.LVL60
 2327 023b 22000000 		.4byte	.LVL64
 2328 023f 0100     		.2byte	0x1
 2329 0241 50       		.byte	0x50
 2330 0242 22000000 		.4byte	.LVL64
 2331 0246 27000000 		.4byte	.LVL65-1
 2332 024a 0100     		.2byte	0x1
 2333 024c 50       		.byte	0x50
 2334 024d 00000000 		.4byte	0
 2335 0251 00000000 		.4byte	0
 2336              	.LLST17:
 2337 0255 16000000 		.4byte	.LVL61
 2338 0259 18000000 		.4byte	.LVL62
 2339 025d 0100     		.2byte	0x1
 2340 025f 54       		.byte	0x54
 2341 0260 1C000000 		.4byte	.LVL63
 2342 0264 40000000 		.4byte	.LVL69
 2343 0268 0100     		.2byte	0x1
 2344 026a 54       		.byte	0x54
 2345 026b 00000000 		.4byte	0
 2346 026f 00000000 		.4byte	0
 2347              		.section	.debug_aranges,"",%progbits
 2348 0000 A4000000 		.4byte	0xa4
 2349 0004 0200     		.2byte	0x2
 2350 0006 00000000 		.4byte	.Ldebug_info0
 2351 000a 04       		.byte	0x4
 2352 000b 00       		.byte	0
 2353 000c 0000     		.2byte	0
 2354 000e 0000     		.2byte	0
 2355 0010 00000000 		.4byte	.LFB12
 2356 0014 64000000 		.4byte	.LFE12-.LFB12
 2357 0018 00000000 		.4byte	.LFB2
 2358 001c 94000000 		.4byte	.LFE2-.LFB2
 2359 0020 00000000 		.4byte	.LFB3
 2360 0024 48000000 		.4byte	.LFE3-.LFB3
 2361 0028 00000000 		.4byte	.LFB4
 2362 002c 18000000 		.4byte	.LFE4-.LFB4
 2363 0030 00000000 		.4byte	.LFB5
 2364 0034 38000000 		.4byte	.LFE5-.LFB5
 2365 0038 00000000 		.4byte	.LFB1
 2366 003c 3C000000 		.4byte	.LFE1-.LFB1
 2367 0040 00000000 		.4byte	.LFB0
 2368 0044 1C000000 		.4byte	.LFE0-.LFB0
 2369 0048 00000000 		.4byte	.LFB6
 2370 004c 10000000 		.4byte	.LFE6-.LFB6
 2371 0050 00000000 		.4byte	.LFB7
 2372 0054 10000000 		.4byte	.LFE7-.LFB7
 2373 0058 00000000 		.4byte	.LFB8
 2374 005c 24000000 		.4byte	.LFE8-.LFB8
 2375 0060 00000000 		.4byte	.LFB9
 2376 0064 18000000 		.4byte	.LFE9-.LFB9
 2377 0068 00000000 		.4byte	.LFB10
 2378 006c 18000000 		.4byte	.LFE10-.LFB10
 2379 0070 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 59


 2380 0074 0C000000 		.4byte	.LFE11-.LFB11
 2381 0078 00000000 		.4byte	.LFB13
 2382 007c 10000000 		.4byte	.LFE13-.LFB13
 2383 0080 00000000 		.4byte	.LFB14
 2384 0084 0C000000 		.4byte	.LFE14-.LFB14
 2385 0088 00000000 		.4byte	.LFB15
 2386 008c 54000000 		.4byte	.LFE15-.LFB15
 2387 0090 00000000 		.4byte	.LFB16
 2388 0094 48000000 		.4byte	.LFE16-.LFB16
 2389 0098 00000000 		.4byte	.LFB17
 2390 009c 50000000 		.4byte	.LFE17-.LFB17
 2391 00a0 00000000 		.4byte	0
 2392 00a4 00000000 		.4byte	0
 2393              		.section	.debug_ranges,"",%progbits
 2394              	.Ldebug_ranges0:
 2395 0000 00000000 		.4byte	.LFB12
 2396 0004 64000000 		.4byte	.LFE12
 2397 0008 00000000 		.4byte	.LFB2
 2398 000c 94000000 		.4byte	.LFE2
 2399 0010 00000000 		.4byte	.LFB3
 2400 0014 48000000 		.4byte	.LFE3
 2401 0018 00000000 		.4byte	.LFB4
 2402 001c 18000000 		.4byte	.LFE4
 2403 0020 00000000 		.4byte	.LFB5
 2404 0024 38000000 		.4byte	.LFE5
 2405 0028 00000000 		.4byte	.LFB1
 2406 002c 3C000000 		.4byte	.LFE1
 2407 0030 00000000 		.4byte	.LFB0
 2408 0034 1C000000 		.4byte	.LFE0
 2409 0038 00000000 		.4byte	.LFB6
 2410 003c 10000000 		.4byte	.LFE6
 2411 0040 00000000 		.4byte	.LFB7
 2412 0044 10000000 		.4byte	.LFE7
 2413 0048 00000000 		.4byte	.LFB8
 2414 004c 24000000 		.4byte	.LFE8
 2415 0050 00000000 		.4byte	.LFB9
 2416 0054 18000000 		.4byte	.LFE9
 2417 0058 00000000 		.4byte	.LFB10
 2418 005c 18000000 		.4byte	.LFE10
 2419 0060 00000000 		.4byte	.LFB11
 2420 0064 0C000000 		.4byte	.LFE11
 2421 0068 00000000 		.4byte	.LFB13
 2422 006c 10000000 		.4byte	.LFE13
 2423 0070 00000000 		.4byte	.LFB14
 2424 0074 0C000000 		.4byte	.LFE14
 2425 0078 00000000 		.4byte	.LFB15
 2426 007c 54000000 		.4byte	.LFE15
 2427 0080 00000000 		.4byte	.LFB16
 2428 0084 48000000 		.4byte	.LFE16
 2429 0088 00000000 		.4byte	.LFB17
 2430 008c 50000000 		.4byte	.LFE17
 2431 0090 00000000 		.4byte	0
 2432 0094 00000000 		.4byte	0
 2433              		.section	.debug_line,"",%progbits
 2434              	.Ldebug_line0:
 2435 0000 1F020000 		.section	.debug_str,"MS",%progbits,1
 2435      02006C00 
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 60


 2435      00000201 
 2435      FB0E0D00 
 2435      01010101 
 2436              	.LASF12:
 2437 0000 75696E74 		.ascii	"uint16\000"
 2437      313600
 2438              	.LASF47:
 2439 0007 4144435F 		.ascii	"ADC_Battery_CountsTo_mVolts\000"
 2439      42617474 
 2439      6572795F 
 2439      436F756E 
 2439      7473546F 
 2440              	.LASF45:
 2441 0023 61646347 		.ascii	"adcGain\000"
 2441      61696E00 
 2442              	.LASF61:
 2443 002b 43794578 		.ascii	"CyExitCriticalSection\000"
 2443      69744372 
 2443      69746963 
 2443      616C5365 
 2443      6374696F 
 2444              	.LASF29:
 2445 0041 4144435F 		.ascii	"ADC_Battery_Stop\000"
 2445      42617474 
 2445      6572795F 
 2445      53746F70 
 2445      00
 2446              	.LASF25:
 2447 0052 636F756E 		.ascii	"counts\000"
 2447      747300
 2448              	.LASF69:
 2449 0059 4144435F 		.ascii	"ADC_Battery_GetResult8\000"
 2449      42617474 
 2449      6572795F 
 2449      47657452 
 2449      6573756C 
 2450              	.LASF37:
 2451 0070 4144435F 		.ascii	"ADC_Battery_StopConvert\000"
 2451      42617474 
 2451      6572795F 
 2451      53746F70 
 2451      436F6E76 
 2452              	.LASF8:
 2453 0088 6C6F6E67 		.ascii	"long long unsigned int\000"
 2453      206C6F6E 
 2453      6720756E 
 2453      7369676E 
 2453      65642069 
 2454              	.LASF36:
 2455 009f 4144435F 		.ascii	"ADC_Battery_StartConvert\000"
 2455      42617474 
 2455      6572795F 
 2455      53746172 
 2455      74436F6E 
 2456              	.LASF7:
 2457 00b8 6C6F6E67 		.ascii	"long long int\000"
 2457      206C6F6E 
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 61


 2457      6720696E 
 2457      7400
 2458              	.LASF1:
 2459 00c6 7369676E 		.ascii	"signed char\000"
 2459      65642063 
 2459      68617200 
 2460              	.LASF58:
 2461 00d2 4144435F 		.ascii	"ADC_Battery_shift\000"
 2461      42617474 
 2461      6572795F 
 2461      73686966 
 2461      7400
 2462              	.LASF16:
 2463 00e4 696E7433 		.ascii	"int32\000"
 2463      3200
 2464              	.LASF5:
 2465 00ea 6C6F6E67 		.ascii	"long int\000"
 2465      20696E74 
 2465      00
 2466              	.LASF22:
 2467 00f3 72656731 		.ascii	"reg16\000"
 2467      3600
 2468              	.LASF11:
 2469 00f9 75696E74 		.ascii	"uint8\000"
 2469      3800
 2470              	.LASF60:
 2471 00ff 43794465 		.ascii	"CyDelayUs\000"
 2471      6C617955 
 2471      7300
 2472              	.LASF19:
 2473 0109 646F7562 		.ascii	"double\000"
 2473      6C6500
 2474              	.LASF13:
 2475 0110 75696E74 		.ascii	"uint32\000"
 2475      333200
 2476              	.LASF50:
 2477 0117 636F756E 		.ascii	"countsPer10Volt\000"
 2477      74735065 
 2477      72313056 
 2477      6F6C7400 
 2478              	.LASF64:
 2479 0127 4379496E 		.ascii	"CyIntSetVector\000"
 2479      74536574 
 2479      56656374 
 2479      6F7200
 2480              	.LASF40:
 2481 0136 4144435F 		.ascii	"ADC_Battery_IsEndConversion\000"
 2481      42617474 
 2481      6572795F 
 2481      4973456E 
 2481      64436F6E 
 2482              	.LASF57:
 2483 0152 4144435F 		.ascii	"ADC_Battery_countsPer10Volt\000"
 2483      42617474 
 2483      6572795F 
 2483      636F756E 
 2483      74735065 
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 62


 2484              	.LASF38:
 2485 016e 7265744D 		.ascii	"retMode\000"
 2485      6F646500 
 2486              	.LASF0:
 2487 0176 756E7369 		.ascii	"unsigned int\000"
 2487      676E6564 
 2487      20696E74 
 2487      00
 2488              	.LASF70:
 2489 0183 75566F6C 		.ascii	"uVolts\000"
 2489      747300
 2490              	.LASF6:
 2491 018a 6C6F6E67 		.ascii	"long unsigned int\000"
 2491      20756E73 
 2491      69676E65 
 2491      6420696E 
 2491      7400
 2492              	.LASF56:
 2493 019c 4144435F 		.ascii	"ADC_Battery_countsPerVolt\000"
 2493      42617474 
 2493      6572795F 
 2493      636F756E 
 2493      74735065 
 2494              	.LASF53:
 2495 01b6 766F6C74 		.ascii	"volts\000"
 2495      7300
 2496              	.LASF71:
 2497 01bc 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2497      74657243 
 2497      72697469 
 2497      63616C53 
 2497      65637469 
 2498              	.LASF4:
 2499 01d3 73686F72 		.ascii	"short unsigned int\000"
 2499      7420756E 
 2499      7369676E 
 2499      65642069 
 2499      6E7400
 2500              	.LASF14:
 2501 01e6 696E7438 		.ascii	"int8\000"
 2501      00
 2502              	.LASF34:
 2503 01eb 4144435F 		.ascii	"ADC_Battery_Init\000"
 2503      42617474 
 2503      6572795F 
 2503      496E6974 
 2503      00
 2504              	.LASF49:
 2505 01fc 6D566F6C 		.ascii	"mVolts\000"
 2505      747300
 2506              	.LASF23:
 2507 0203 72656733 		.ascii	"reg32\000"
 2507      3200
 2508              	.LASF54:
 2509 0209 4144435F 		.ascii	"ADC_Battery_initVar\000"
 2509      42617474 
 2509      6572795F 
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 63


 2509      696E6974 
 2509      56617200 
 2510              	.LASF17:
 2511 021d 666C6F61 		.ascii	"float32\000"
 2511      74333200 
 2512              	.LASF9:
 2513 0225 73697A65 		.ascii	"sizetype\000"
 2513      74797065 
 2513      00
 2514              	.LASF67:
 2515 022e 433A5C55 		.ascii	"C:\\Users\\Nhan Phan\\Desktop\\CProjects\\Zumobot\\"
 2515      73657273 
 2515      5C4E6861 
 2515      6E205068 
 2515      616E5C44 
 2516 025b 5A756D6F 		.ascii	"ZumoBot.cydsn\000"
 2516      426F742E 
 2516      63796473 
 2516      6E00
 2517              	.LASF20:
 2518 0269 696E7436 		.ascii	"int64\000"
 2518      3400
 2519              	.LASF63:
 2520 026f 4379496E 		.ascii	"CyIntSetPriority\000"
 2520      74536574 
 2520      5072696F 
 2520      72697479 
 2520      00
 2521              	.LASF55:
 2522 0280 4144435F 		.ascii	"ADC_Battery_offset\000"
 2522      42617474 
 2522      6572795F 
 2522      6F666673 
 2522      657400
 2523              	.LASF18:
 2524 0293 666C6F61 		.ascii	"float\000"
 2524      7400
 2525              	.LASF42:
 2526 0299 4144435F 		.ascii	"ADC_Battery_SetOffset\000"
 2526      42617474 
 2526      6572795F 
 2526      5365744F 
 2526      66667365 
 2527              	.LASF32:
 2528 02af 706F7765 		.ascii	"power\000"
 2528      7200
 2529              	.LASF21:
 2530 02b5 72656738 		.ascii	"reg8\000"
 2530      00
 2531              	.LASF59:
 2532 02ba 43794861 		.ascii	"CyHalt\000"
 2532      6C7400
 2533              	.LASF2:
 2534 02c1 756E7369 		.ascii	"unsigned char\000"
 2534      676E6564 
 2534      20636861 
 2534      7200
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 64


 2535              	.LASF3:
 2536 02cf 73686F72 		.ascii	"short int\000"
 2536      7420696E 
 2536      7400
 2537              	.LASF33:
 2538 02d9 4144435F 		.ascii	"ADC_Battery_SetResolution\000"
 2538      42617474 
 2538      6572795F 
 2538      53657452 
 2538      65736F6C 
 2539              	.LASF41:
 2540 02f3 4144435F 		.ascii	"ADC_Battery_GetResult16\000"
 2540      42617474 
 2540      6572795F 
 2540      47657452 
 2540      6573756C 
 2541              	.LASF66:
 2542 030b 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_Battery.c\000"
 2542      72617465 
 2542      645F536F 
 2542      75726365 
 2542      5C50536F 
 2543              	.LASF52:
 2544 0330 4144435F 		.ascii	"ADC_Battery_CountsTo_Volts\000"
 2544      42617474 
 2544      6572795F 
 2544      436F756E 
 2544      7473546F 
 2545              	.LASF35:
 2546 034b 4144435F 		.ascii	"ADC_Battery_Start\000"
 2546      42617474 
 2546      6572795F 
 2546      53746172 
 2546      7400
 2547              	.LASF10:
 2548 035d 63686172 		.ascii	"char\000"
 2548      00
 2549              	.LASF24:
 2550 0362 63796973 		.ascii	"cyisraddress\000"
 2550      72616464 
 2550      72657373 
 2550      00
 2551              	.LASF44:
 2552 036f 4144435F 		.ascii	"ADC_Battery_SetGain\000"
 2552      42617474 
 2552      6572795F 
 2552      53657447 
 2552      61696E00 
 2553              	.LASF28:
 2554 0383 4144435F 		.ascii	"ADC_Battery_Enable\000"
 2554      42617474 
 2554      6572795F 
 2554      456E6162 
 2554      6C6500
 2555              	.LASF31:
 2556 0396 7265736F 		.ascii	"resolution\000"
 2556      6C757469 
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 65


 2556      6F6E00
 2557              	.LASF30:
 2558 03a1 4144435F 		.ascii	"ADC_Battery_SetPower\000"
 2558      42617474 
 2558      6572795F 
 2558      53657450 
 2558      6F776572 
 2559              	.LASF43:
 2560 03b6 6F666673 		.ascii	"offset\000"
 2560      657400
 2561              	.LASF48:
 2562 03bd 61646343 		.ascii	"adcCounts\000"
 2562      6F756E74 
 2562      7300
 2563              	.LASF27:
 2564 03c7 656E6162 		.ascii	"enableInterrupts\000"
 2564      6C65496E 
 2564      74657272 
 2564      75707473 
 2564      00
 2565              	.LASF46:
 2566 03d8 4144435F 		.ascii	"ADC_Battery_SetScaledGain\000"
 2566      42617474 
 2566      6572795F 
 2566      53657453 
 2566      63616C65 
 2567              	.LASF39:
 2568 03f2 73746174 		.ascii	"status\000"
 2568      757300
 2569              	.LASF65:
 2570 03f9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2570      4320342E 
 2570      392E3320 
 2570      32303135 
 2570      30333033 
 2571 042c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2571      20726576 
 2571      6973696F 
 2571      6E203232 
 2571      31323230 
 2572 045f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2572      66756E63 
 2572      74696F6E 
 2572      2D736563 
 2572      74696F6E 
 2573              	.LASF15:
 2574 0487 696E7431 		.ascii	"int16\000"
 2574      3600
 2575              	.LASF51:
 2576 048d 4144435F 		.ascii	"ADC_Battery_CountsTo_uVolts\000"
 2576      42617474 
 2576      6572795F 
 2576      436F756E 
 2576      7473546F 
 2577              	.LASF62:
 2578 04a9 4144435F 		.ascii	"ADC_Battery_theACLK_SetModeRegister\000"
 2578      42617474 
ARM GAS  C:\Users\NHANPH~1\AppData\Local\Temp\cctXInjS.s 			page 66


 2578      6572795F 
 2578      74686541 
 2578      434C4B5F 
 2579              	.LASF68:
 2580 04cd 4144435F 		.ascii	"ADC_Battery_CalcGain\000"
 2580      42617474 
 2580      6572795F 
 2580      43616C63 
 2580      4761696E 
 2581              	.LASF26:
 2582 04e2 746D7052 		.ascii	"tmpReg\000"
 2582      656700
 2583              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
